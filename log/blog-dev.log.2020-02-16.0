2020-02-16 14:26:09.765  INFO 5512 --- [main] com.peng.blog.TestType                   : Starting TestType on LAPTOP-3JGI280N with PID 5512 (started by 23185 in D:\workspaces\ideaWebWorkSpace\blog)
2020-02-16 14:26:09.778 DEBUG 5512 --- [main] com.peng.blog.TestType                   : Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2020-02-16 14:26:09.779  INFO 5512 --- [main] com.peng.blog.TestType                   : The following profiles are active: dev
2020-02-16 14:26:10.449  INFO 5512 --- [main] o.s.w.c.s.GenericWebApplicationContext   : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6f36c2f0: startup date [Sun Feb 16 14:26:10 CST 2020]; root of context hierarchy
2020-02-16 14:26:17.638  INFO 5512 --- [main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-02-16 14:26:17.681  INFO 5512 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-02-16 14:26:17.888  INFO 5512 --- [main] org.hibernate.Version                    : HHH000412: Hibernate Core {5.0.12.Final}
2020-02-16 14:26:17.891  INFO 5512 --- [main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2020-02-16 14:26:17.893  INFO 5512 --- [main] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2020-02-16 14:26:18.021  INFO 5512 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2020-02-16 14:26:18.320  INFO 5512 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-16 14:26:19.444  INFO 5512 --- [main] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000228: Running hbm2ddl schema update
2020-02-16 14:26:21.559  INFO 5512 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 14:26:23.838  INFO 5512 --- [main] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2020-02-16 14:26:25.917  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@6f36c2f0: startup date [Sun Feb 16 14:26:10 CST 2020]; root of context hierarchy
2020-02-16 14:26:26.062  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[ || /index.html],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.index(org.springframework.data.domain.Pageable,org.springframework.ui.Model)
2020-02-16 14:26:26.064  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.check(int,org.springframework.ui.Model) throws com.peng.blog.exception.NotFoundException
2020-02-16 14:26:26.065  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.client.BlogController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 14:26:26.068  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.add(com.peng.blog.entity.Blog,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 14:26:26.069  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog || /manage/blog/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.list(org.springframework.data.domain.Pageable,org.springframework.ui.Model,javax.servlet.http.HttpSession)
2020-02-16 14:26:26.069  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/search]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.search(org.springframework.data.domain.Pageable,com.peng.blog.entity.Blog,org.springframework.ui.Model)
2020-02-16 14:26:26.069  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/publish],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.publish(org.springframework.ui.Model,com.peng.blog.entity.Blog)
2020-02-16 14:26:26.070  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 14:26:26.070  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/del],methods=[GET]}" onto public com.peng.blog.utils.Message com.peng.blog.web.management.BlogManageController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 14:26:26.072  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/login],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.LoginController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 14:26:26.073  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/logout],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.LoginController.logout(javax.servlet.http.HttpSession)
2020-02-16 14:26:26.075  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.add(com.peng.blog.entity.Tag,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 14:26:26.076  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag || /manage/tag/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.list(int,org.springframework.ui.Model)
2020-02-16 14:26:26.079  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 14:26:26.080  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 14:26:26.081  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 14:26:26.084  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.add(com.peng.blog.entity.Type,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 14:26:26.084  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/list || /manage/type],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.list(int,org.springframework.ui.Model)
2020-02-16 14:26:26.084  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 14:26:26.085  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 14:26:26.085  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 14:26:26.087  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t1]}" onto public java.lang.String com.peng.blog.web.TestController.t1(java.lang.String) throws com.peng.blog.exception.NotFoundException
2020-02-16 14:26:26.088  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t3]}" onto public java.lang.String com.peng.blog.web.TestController.t3(int)
2020-02-16 14:26:26.088  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t2]}" onto public java.lang.String com.peng.blog.web.TestController.t2(java.lang.String,int,boolean) throws com.peng.blog.exception.NotFoundException
2020-02-16 14:26:26.090  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-02-16 14:26:26.091  INFO 5512 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-02-16 14:26:26.136  INFO 5512 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 14:26:26.137  INFO 5512 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/index.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 14:26:26.137  INFO 5512 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/welcome] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 14:26:26.139  INFO 5512 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/type/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 14:26:26.140  INFO 5512 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/tag/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 14:26:26.258  INFO 5512 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 14:26:26.258  INFO 5512 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 14:26:26.287  INFO 5512 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in globalExceptionHandler
2020-02-16 14:26:26.323  INFO 5512 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 14:26:27.006  INFO 5512 --- [main] oConfiguration$WelcomePageHandlerMapping : Adding welcome page: ServletContext resource [/index.html]
2020-02-16 14:26:27.512  INFO 5512 --- [main] com.peng.blog.TestType                   : Started TestType in 19.396 seconds (JVM running for 22.97)
2020-02-16 14:26:27.737  INFO 5512 --- [main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@6385cb26 testClass = TestType, testInstance = com.peng.blog.TestType@7582a16b, testMethod = t1@TestType, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38364841 testClass = TestType, locations = '{}', classes = '{class com.peng.blog.BlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@148080bb, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e1ec318, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1e127982, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@210366b4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@430106cf]; rollback [true]
2020-02-16 14:26:28.432  INFO 5512 --- [main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@6385cb26 testClass = TestType, testInstance = com.peng.blog.TestType@7582a16b, testMethod = t1@TestType, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@38364841 testClass = TestType, locations = '{}', classes = '{class com.peng.blog.BlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@148080bb, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e1ec318, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1e127982, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@210366b4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2020-02-16 14:26:28.443  INFO 5512 --- [Thread-4] o.s.w.c.s.GenericWebApplicationContext   : Closing org.springframework.web.context.support.GenericWebApplicationContext@6f36c2f0: startup date [Sun Feb 16 14:26:10 CST 2020]; root of context hierarchy
2020-02-16 14:26:28.451  INFO 5512 --- [Thread-4] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 17:59:17.239  INFO 1884 --- [restartedMain] com.peng.blog.BlogApplication            : Starting BlogApplication on LAPTOP-3JGI280N with PID 1884 (D:\workspaces\ideaWebWorkSpace\blog\target\classes started by 23185 in D:\workspaces\ideaWebWorkSpace\blog)
2020-02-16 17:59:17.246 DEBUG 1884 --- [restartedMain] com.peng.blog.BlogApplication            : Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2020-02-16 17:59:17.247  INFO 1884 --- [restartedMain] com.peng.blog.BlogApplication            : The following profiles are active: dev
2020-02-16 17:59:18.138  INFO 1884 --- [restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4271a26a: startup date [Sun Feb 16 17:59:18 CST 2020]; root of context hierarchy
2020-02-16 17:59:22.345  INFO 1884 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2020-02-16 17:59:22.396  INFO 1884 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-16 17:59:22.397  INFO 1884 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.23
2020-02-16 17:59:22.611  INFO 1884 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-16 17:59:22.611  INFO 1884 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4473 ms
2020-02-16 17:59:22.890  INFO 1884 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2020-02-16 17:59:22.909  INFO 1884 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2020-02-16 17:59:22.910  INFO 1884 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-02-16 17:59:22.911  INFO 1884 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-02-16 17:59:22.911  INFO 1884 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2020-02-16 17:59:25.842  INFO 1884 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-02-16 17:59:25.856  INFO 1884 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-02-16 17:59:26.009  INFO 1884 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.0.12.Final}
2020-02-16 17:59:26.013  INFO 1884 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2020-02-16 17:59:26.015  INFO 1884 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2020-02-16 17:59:26.109  INFO 1884 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2020-02-16 17:59:26.454  INFO 1884 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-16 17:59:27.203  INFO 1884 --- [restartedMain] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000228: Running hbm2ddl schema update
2020-02-16 17:59:28.361  INFO 1884 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 17:59:28.896  INFO 1884 --- [restartedMain] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2020-02-16 17:59:30.127  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4271a26a: startup date [Sun Feb 16 17:59:18 CST 2020]; root of context hierarchy
2020-02-16 17:59:30.241  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[ || /index.html],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.index(org.springframework.data.domain.Pageable,org.springframework.ui.Model)
2020-02-16 17:59:30.245  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.check(int,org.springframework.ui.Model) throws com.peng.blog.exception.NotFoundException
2020-02-16 17:59:30.246  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.client.BlogController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 17:59:30.248  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/content/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.content(int) throws com.peng.blog.exception.NotFoundException
2020-02-16 17:59:30.249  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.add(com.peng.blog.entity.Blog,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 17:59:30.250  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog || /manage/blog/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.list(org.springframework.data.domain.Pageable,org.springframework.ui.Model,javax.servlet.http.HttpSession)
2020-02-16 17:59:30.250  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/search]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.search(org.springframework.data.domain.Pageable,com.peng.blog.entity.Blog,org.springframework.ui.Model)
2020-02-16 17:59:30.251  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/publish],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.publish(org.springframework.ui.Model,com.peng.blog.entity.Blog)
2020-02-16 17:59:30.251  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 17:59:30.251  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/del],methods=[GET]}" onto public com.peng.blog.utils.Message com.peng.blog.web.management.BlogManageController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 17:59:30.253  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/login],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.LoginController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 17:59:30.254  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/logout],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.LoginController.logout(javax.servlet.http.HttpSession)
2020-02-16 17:59:30.256  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.add(com.peng.blog.entity.Tag,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 17:59:30.257  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag || /manage/tag/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.list(int,org.springframework.ui.Model)
2020-02-16 17:59:30.257  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 17:59:30.258  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 17:59:30.261  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 17:59:30.265  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.add(com.peng.blog.entity.Type,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 17:59:30.266  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/list || /manage/type],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.list(int,org.springframework.ui.Model)
2020-02-16 17:59:30.266  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 17:59:30.266  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 17:59:30.267  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 17:59:30.268  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t2]}" onto public java.lang.String com.peng.blog.web.TestController.t2(java.lang.String,int,boolean) throws com.peng.blog.exception.NotFoundException
2020-02-16 17:59:30.270  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t1]}" onto public java.lang.String com.peng.blog.web.TestController.t1(java.lang.String) throws com.peng.blog.exception.NotFoundException
2020-02-16 17:59:30.270  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t3]}" onto public java.lang.String com.peng.blog.web.TestController.t3(int)
2020-02-16 17:59:30.272  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-02-16 17:59:30.272  INFO 1884 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-02-16 17:59:30.328  INFO 1884 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 17:59:30.329  INFO 1884 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/index.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 17:59:30.329  INFO 1884 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/welcome] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 17:59:30.331  INFO 1884 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/type/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 17:59:30.331  INFO 1884 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/tag/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 17:59:30.399  INFO 1884 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 17:59:30.400  INFO 1884 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 17:59:30.443  INFO 1884 --- [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in globalExceptionHandler
2020-02-16 17:59:30.490  INFO 1884 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 17:59:31.031  INFO 1884 --- [restartedMain] oConfiguration$WelcomePageHandlerMapping : Adding welcome page: class path resource [static/index.html]
2020-02-16 17:59:31.586  INFO 1884 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-16 17:59:31.665  INFO 1884 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2020-02-16 17:59:31.838  INFO 1884 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2020-02-16 17:59:31.899  INFO 1884 --- [restartedMain] com.peng.blog.BlogApplication            : Started BlogApplication in 16.236 seconds (JVM running for 19.72)
2020-02-16 18:00:04.803  INFO 1884 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-02-16 18:00:04.804  INFO 1884 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2020-02-16 18:00:04.941  INFO 1884 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 137 ms
2020-02-16 18:00:10.464  INFO 1884 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/login', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.LoginController.login', args=[peng, 123456, org.apache.catalina.session.StandardSessionFacade@67b85681, {}]}
2020-02-16 18:00:10.917  INFO 1884 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : Return result:redirect:/manage/welcome
2020-02-16 18:00:12.682  INFO 1884 --- [http-nio-8080-exec-10] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.list', args=[Page request [number: 0, size 5, sort: lastUpdateTime: DESC], {}, org.apache.catalina.session.StandardSessionFacade@67b85681]}
2020-02-16 18:00:14.128  INFO 1884 --- [http-nio-8080-exec-10] com.peng.blog.aspect.LogAspect           : Return result:management/blogs
2020-02-16 18:00:15.835  INFO 1884 --- [http-nio-8080-exec-5] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/edit', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.edit', args=[30, {}]}
2020-02-16 18:00:16.215  INFO 1884 --- [http-nio-8080-exec-5] com.peng.blog.aspect.LogAspect           : Return result:redirect:/manage/blog/publish
2020-02-16 18:00:16.247  INFO 1884 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/publish', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.publish', args=[{blog=Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。
 # 三、如何创建 Markdown 笔记？
 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记
 # 四、印象笔记 Markdown 笔记支持哪些语法？ 

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)

- 插入表格：
1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：

1.语法：

\~\~\~java
插入代码
\~\~\~

2.效果

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=2020-02-15 22:15:30.0, view_times=6, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。
 # 三、如何创建 Markdown 笔记？
 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记
 # 四、印象笔记 Markdown 笔记支持哪些语法？ 

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)

- 插入表格：
1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：

1.语法：

\~\~\~java
插入代码
\~\~\~

2.效果

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=2020-02-15 22:15:30.0, view_times=6, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}]}
2020-02-16 18:00:16.299  INFO 1884 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : Return result:management/publishBlog
2020-02-16 18:00:39.820  INFO 1884 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/add', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.add', args=[Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。
 # 三、如何创建 Markdown 笔记？
 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记
 # 四、印象笔记 Markdown 笔记支持哪些语法？ 

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
 - 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=null, lastUpdateTime=null, view_times=0, type=Type{id='53', name=null}, tags=[], user=null, tagIds='17'}, org.apache.catalina.session.StandardSessionFacade@67b85681, {}]}
2020-02-16 18:00:41.505  INFO 1884 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : Return result:redirect:/manage/blog/publish
2020-02-16 18:00:41.517  INFO 1884 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/publish', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.publish', args=[{message=Message{code=1, msg='标题为"Markdown基本语法学习"的博客更新成功。
您可以继续编辑修改博客。'}, blog=Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。
 # 三、如何创建 Markdown 笔记？
 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记
 # 四、印象笔记 Markdown 笔记支持哪些语法？ 

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
 - 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:00:39 CST 2020, view_times=6, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。
 # 三、如何创建 Markdown 笔记？
 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记
 # 四、印象笔记 Markdown 笔记支持哪些语法？ 

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
 - 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:00:39 CST 2020, view_times=6, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}]}
2020-02-16 18:00:41.585  INFO 1884 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : Return result:management/publishBlog
2020-02-16 18:00:44.468  INFO 1884 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.list', args=[Page request [number: 0, size 5, sort: lastUpdateTime: DESC], {}, org.apache.catalina.session.StandardSessionFacade@67b85681]}
2020-02-16 18:00:44.488  INFO 1884 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : Return result:management/blogs
2020-02-16 18:00:50.837  INFO 1884 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/edit', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.edit', args=[30, {}]}
2020-02-16 18:00:50.852  INFO 1884 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : Return result:redirect:/manage/blog/publish
2020-02-16 18:00:50.867  INFO 1884 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/publish', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.publish', args=[{blog=Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。
 # 三、如何创建 Markdown 笔记？
 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记
 # 四、印象笔记 Markdown 笔记支持哪些语法？ 

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
 - 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=2020-02-16 18:00:40.0, view_times=6, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。
 # 三、如何创建 Markdown 笔记？
 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记
 # 四、印象笔记 Markdown 笔记支持哪些语法？ 

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
 - 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=2020-02-16 18:00:40.0, view_times=6, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}]}
2020-02-16 18:00:50.887  INFO 1884 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : Return result:management/publishBlog
2020-02-16 18:00:58.275  INFO 1884 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.list', args=[Page request [number: 0, size 5, sort: lastUpdateTime: DESC], {}, org.apache.catalina.session.StandardSessionFacade@67b85681]}
2020-02-16 18:00:58.307  INFO 1884 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : Return result:management/blogs
2020-02-16 18:01:01.819  INFO 1884 --- [http-nio-8080-exec-8] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.index', args=[Page request [number: 0, size 6, sort: createTime: DESC], {}]}
2020-02-16 18:01:01.864  WARN 1884 --- [http-nio-8080-exec-8] org.hibernate.orm.deprecation            : HHH90000016: Found use of deprecated 'collection property' syntax in HQL/JPQL query [null.size]; use collection function syntax instead [size(null)].
2020-02-16 18:01:03.014  WARN 1884 --- [http-nio-8080-exec-8] org.hibernate.orm.deprecation            : HHH90000016: Found use of deprecated 'collection property' syntax in HQL/JPQL query [null.size]; use collection function syntax instead [size(null)].
2020-02-16 18:01:03.044  INFO 1884 --- [http-nio-8080-exec-8] com.peng.blog.aspect.LogAspect           : Return result:index
2020-02-16 18:01:08.462  INFO 1884 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 18:01:09.027  INFO 1884 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 18:01:09.091 ERROR 1884 --- [http-nio-8080-exec-7] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-7] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:667)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1087)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1061)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: An error happened during template rendering
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 52 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateOutputException: An error happened during template rendering
	at org.thymeleaf.engine.OutputTemplateHandler.handleText(OutputTemplateHandler.java:75)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleText(ProcessorTemplateHandler.java:587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleText(TemplateHandlerAdapterMarkupHandler.java:218)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleText(InlinedOutputExpressionMarkupHandler.java:232)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleText(OutputExpressionInlinePreProcessorHandler.java:136)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleText(InlinedOutputExpressionMarkupHandler.java:80)
	at org.attoparser.HtmlMarkupHandler.handleText(HtmlMarkupHandler.java:208)
	at org.attoparser.AbstractChainedMarkupHandler.handleText(AbstractChainedMarkupHandler.java:203)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:557)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 54 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "@{/content/{id}(id=${blog.id}})}" (template: "blog" - line 444, col 29)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:131)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:44)
	at org.thymeleaf.engine.EngineEventUtils.parseAttributeExpression(EngineEventUtils.java:220)
	at org.thymeleaf.engine.EngineEventUtils.computeAttributeExpression(EngineEventUtils.java:207)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:67)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.process(TemplateManager.java:520)
	at org.thymeleaf.util.LazyProcessingCharSequence.writeUnresolved(LazyProcessingCharSequence.java:85)
	at org.thymeleaf.util.AbstractLazyCharSequence.write(AbstractLazyCharSequence.java:103)
	at org.thymeleaf.engine.AbstractTextualTemplateEvent.writeContent(AbstractTextualTemplateEvent.java:224)
	at org.thymeleaf.engine.Text.write(Text.java:78)
	at org.thymeleaf.engine.OutputTemplateHandler.handleText(OutputTemplateHandler.java:71)
	... 63 common frames omitted

2020-02-16 18:01:09.108 ERROR 1884 --- [http-nio-8080-exec-7] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")] with root cause

org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "@{/content/{id}(id=${blog.id}})}" (template: "blog" - line 444, col 29)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:131)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:44)
	at org.thymeleaf.engine.EngineEventUtils.parseAttributeExpression(EngineEventUtils.java:220)
	at org.thymeleaf.engine.EngineEventUtils.computeAttributeExpression(EngineEventUtils.java:207)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:67)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.process(TemplateManager.java:520)
	at org.thymeleaf.util.LazyProcessingCharSequence.writeUnresolved(LazyProcessingCharSequence.java:85)
	at org.thymeleaf.util.AbstractLazyCharSequence.write(AbstractLazyCharSequence.java:103)
	at org.thymeleaf.engine.AbstractTextualTemplateEvent.writeContent(AbstractTextualTemplateEvent.java:224)
	at org.thymeleaf.engine.Text.write(Text.java:78)
	at org.thymeleaf.engine.OutputTemplateHandler.handleText(OutputTemplateHandler.java:71)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleText(ProcessorTemplateHandler.java:587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleText(TemplateHandlerAdapterMarkupHandler.java:218)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleText(InlinedOutputExpressionMarkupHandler.java:232)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleText(OutputExpressionInlinePreProcessorHandler.java:136)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleText(InlinedOutputExpressionMarkupHandler.java:80)
	at org.attoparser.HtmlMarkupHandler.handleText(HtmlMarkupHandler.java:208)
	at org.attoparser.AbstractChainedMarkupHandler.handleText(AbstractChainedMarkupHandler.java:203)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:557)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:667)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1087)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1061)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-02-16 18:01:21.050  INFO 1884 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 18:01:21.390  INFO 1884 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 18:01:21.432 ERROR 1884 --- [http-nio-8080-exec-4] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-4] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:667)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1087)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1061)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: An error happened during template rendering
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 52 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateOutputException: An error happened during template rendering
	at org.thymeleaf.engine.OutputTemplateHandler.handleText(OutputTemplateHandler.java:75)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleText(ProcessorTemplateHandler.java:587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleText(TemplateHandlerAdapterMarkupHandler.java:218)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleText(InlinedOutputExpressionMarkupHandler.java:232)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleText(OutputExpressionInlinePreProcessorHandler.java:136)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleText(InlinedOutputExpressionMarkupHandler.java:80)
	at org.attoparser.HtmlMarkupHandler.handleText(HtmlMarkupHandler.java:208)
	at org.attoparser.AbstractChainedMarkupHandler.handleText(AbstractChainedMarkupHandler.java:203)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:557)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 54 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "@{/content/{id}(id=${blog.id}})}" (template: "blog" - line 444, col 29)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:131)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:44)
	at org.thymeleaf.engine.EngineEventUtils.parseAttributeExpression(EngineEventUtils.java:220)
	at org.thymeleaf.engine.EngineEventUtils.computeAttributeExpression(EngineEventUtils.java:207)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:67)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.process(TemplateManager.java:520)
	at org.thymeleaf.util.LazyProcessingCharSequence.writeUnresolved(LazyProcessingCharSequence.java:85)
	at org.thymeleaf.util.AbstractLazyCharSequence.write(AbstractLazyCharSequence.java:103)
	at org.thymeleaf.engine.AbstractTextualTemplateEvent.writeContent(AbstractTextualTemplateEvent.java:224)
	at org.thymeleaf.engine.Text.write(Text.java:78)
	at org.thymeleaf.engine.OutputTemplateHandler.handleText(OutputTemplateHandler.java:71)
	... 63 common frames omitted

2020-02-16 18:01:21.434 ERROR 1884 --- [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")] with root cause

org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "@{/content/{id}(id=${blog.id}})}" (template: "blog" - line 444, col 29)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:131)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:44)
	at org.thymeleaf.engine.EngineEventUtils.parseAttributeExpression(EngineEventUtils.java:220)
	at org.thymeleaf.engine.EngineEventUtils.computeAttributeExpression(EngineEventUtils.java:207)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:67)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.process(TemplateManager.java:520)
	at org.thymeleaf.util.LazyProcessingCharSequence.writeUnresolved(LazyProcessingCharSequence.java:85)
	at org.thymeleaf.util.AbstractLazyCharSequence.write(AbstractLazyCharSequence.java:103)
	at org.thymeleaf.engine.AbstractTextualTemplateEvent.writeContent(AbstractTextualTemplateEvent.java:224)
	at org.thymeleaf.engine.Text.write(Text.java:78)
	at org.thymeleaf.engine.OutputTemplateHandler.handleText(OutputTemplateHandler.java:71)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleText(ProcessorTemplateHandler.java:587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleText(TemplateHandlerAdapterMarkupHandler.java:218)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleText(InlinedOutputExpressionMarkupHandler.java:232)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleText(OutputExpressionInlinePreProcessorHandler.java:136)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleText(InlinedOutputExpressionMarkupHandler.java:80)
	at org.attoparser.HtmlMarkupHandler.handleText(HtmlMarkupHandler.java:208)
	at org.attoparser.AbstractChainedMarkupHandler.handleText(AbstractChainedMarkupHandler.java:203)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:557)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:667)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1087)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1061)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-02-16 18:22:18.617  INFO 1884 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 18:22:19.067  INFO 1884 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 18:22:19.091 ERROR 1884 --- [http-nio-8080-exec-1] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-1] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:667)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1087)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1061)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: An error happened during template rendering
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 52 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateOutputException: An error happened during template rendering
	at org.thymeleaf.engine.OutputTemplateHandler.handleText(OutputTemplateHandler.java:75)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleText(ProcessorTemplateHandler.java:587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleText(TemplateHandlerAdapterMarkupHandler.java:218)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleText(InlinedOutputExpressionMarkupHandler.java:232)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleText(OutputExpressionInlinePreProcessorHandler.java:136)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleText(InlinedOutputExpressionMarkupHandler.java:80)
	at org.attoparser.HtmlMarkupHandler.handleText(HtmlMarkupHandler.java:208)
	at org.attoparser.AbstractChainedMarkupHandler.handleText(AbstractChainedMarkupHandler.java:203)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:557)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 54 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "@{/content/{id}(id=${blog.id}})}" (template: "blog" - line 444, col 29)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:131)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:44)
	at org.thymeleaf.engine.EngineEventUtils.parseAttributeExpression(EngineEventUtils.java:220)
	at org.thymeleaf.engine.EngineEventUtils.computeAttributeExpression(EngineEventUtils.java:207)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:67)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.process(TemplateManager.java:520)
	at org.thymeleaf.util.LazyProcessingCharSequence.writeUnresolved(LazyProcessingCharSequence.java:85)
	at org.thymeleaf.util.AbstractLazyCharSequence.write(AbstractLazyCharSequence.java:103)
	at org.thymeleaf.engine.AbstractTextualTemplateEvent.writeContent(AbstractTextualTemplateEvent.java:224)
	at org.thymeleaf.engine.Text.write(Text.java:78)
	at org.thymeleaf.engine.OutputTemplateHandler.handleText(OutputTemplateHandler.java:71)
	... 63 common frames omitted

2020-02-16 18:22:19.092 ERROR 1884 --- [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")] with root cause

org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "@{/content/{id}(id=${blog.id}})}" (template: "blog" - line 444, col 29)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:131)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:44)
	at org.thymeleaf.engine.EngineEventUtils.parseAttributeExpression(EngineEventUtils.java:220)
	at org.thymeleaf.engine.EngineEventUtils.computeAttributeExpression(EngineEventUtils.java:207)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:67)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.process(TemplateManager.java:520)
	at org.thymeleaf.util.LazyProcessingCharSequence.writeUnresolved(LazyProcessingCharSequence.java:85)
	at org.thymeleaf.util.AbstractLazyCharSequence.write(AbstractLazyCharSequence.java:103)
	at org.thymeleaf.engine.AbstractTextualTemplateEvent.writeContent(AbstractTextualTemplateEvent.java:224)
	at org.thymeleaf.engine.Text.write(Text.java:78)
	at org.thymeleaf.engine.OutputTemplateHandler.handleText(OutputTemplateHandler.java:71)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleText(ProcessorTemplateHandler.java:587)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleText(TemplateHandlerAdapterMarkupHandler.java:218)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleText(InlinedOutputExpressionMarkupHandler.java:232)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleText(OutputExpressionInlinePreProcessorHandler.java:136)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleText(InlinedOutputExpressionMarkupHandler.java:80)
	at org.attoparser.HtmlMarkupHandler.handleText(HtmlMarkupHandler.java:208)
	at org.attoparser.AbstractChainedMarkupHandler.handleText(AbstractChainedMarkupHandler.java:203)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:557)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:667)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1087)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1061)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-02-16 18:23:25.718  INFO 1884 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 18:23:26.110  INFO 1884 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 18:23:26.129 ERROR 1884 --- [http-nio-8080-exec-4] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-4] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:667)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1087)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1061)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Unrecognized inline mode: script
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 52 common frames omitted
Caused by: java.lang.IllegalArgumentException: Unrecognized inline mode: script
	at org.thymeleaf.standard.inline.StandardInlineMode.parse(StandardInlineMode.java:71)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.computeAssociatedTemplateMode(OutputExpressionInlinePreProcessorHandler.java:320)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleAttribute(OutputExpressionInlinePreProcessorHandler.java:256)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleAttribute(InlinedOutputExpressionMarkupHandler.java:205)
	at org.attoparser.HtmlCDATAContentElement.handleAttribute(HtmlCDATAContentElement.java:165)
	at org.attoparser.HtmlMarkupHandler.handleAttribute(HtmlMarkupHandler.java:529)
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:593)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:275)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 54 common frames omitted

2020-02-16 18:23:26.130 ERROR 1884 --- [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")] with root cause

java.lang.IllegalArgumentException: Unrecognized inline mode: script
	at org.thymeleaf.standard.inline.StandardInlineMode.parse(StandardInlineMode.java:71)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.computeAssociatedTemplateMode(OutputExpressionInlinePreProcessorHandler.java:320)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleAttribute(OutputExpressionInlinePreProcessorHandler.java:256)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleAttribute(InlinedOutputExpressionMarkupHandler.java:205)
	at org.attoparser.HtmlCDATAContentElement.handleAttribute(HtmlCDATAContentElement.java:165)
	at org.attoparser.HtmlMarkupHandler.handleAttribute(HtmlMarkupHandler.java:529)
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:593)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:275)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:667)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1087)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1061)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-02-16 18:26:30.864  INFO 1884 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 18:26:31.236  INFO 1884 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 18:26:31.308 ERROR 1884 --- [http-nio-8080-exec-4] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-4] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:667)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1087)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1061)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Unrecognized inline mode: script
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 52 common frames omitted
Caused by: java.lang.IllegalArgumentException: Unrecognized inline mode: script
	at org.thymeleaf.standard.inline.StandardInlineMode.parse(StandardInlineMode.java:71)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.computeAssociatedTemplateMode(OutputExpressionInlinePreProcessorHandler.java:320)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleAttribute(OutputExpressionInlinePreProcessorHandler.java:256)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleAttribute(InlinedOutputExpressionMarkupHandler.java:205)
	at org.attoparser.HtmlCDATAContentElement.handleAttribute(HtmlCDATAContentElement.java:165)
	at org.attoparser.HtmlMarkupHandler.handleAttribute(HtmlMarkupHandler.java:529)
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:593)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:275)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 54 common frames omitted

2020-02-16 18:26:31.480 ERROR 1884 --- [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")] with root cause

java.lang.IllegalArgumentException: Unrecognized inline mode: script
	at org.thymeleaf.standard.inline.StandardInlineMode.parse(StandardInlineMode.java:71)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.computeAssociatedTemplateMode(OutputExpressionInlinePreProcessorHandler.java:320)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleAttribute(OutputExpressionInlinePreProcessorHandler.java:256)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleAttribute(InlinedOutputExpressionMarkupHandler.java:205)
	at org.attoparser.HtmlCDATAContentElement.handleAttribute(HtmlCDATAContentElement.java:165)
	at org.attoparser.HtmlMarkupHandler.handleAttribute(HtmlMarkupHandler.java:529)
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:593)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:275)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:667)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1087)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1061)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-02-16 18:27:07.240  INFO 16792 --- [restartedMain] com.peng.blog.BlogApplication            : Starting BlogApplication on LAPTOP-3JGI280N with PID 16792 (D:\workspaces\ideaWebWorkSpace\blog\target\classes started by 23185 in D:\workspaces\ideaWebWorkSpace\blog)
2020-02-16 18:27:07.240 DEBUG 16792 --- [restartedMain] com.peng.blog.BlogApplication            : Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2020-02-16 18:27:07.241  INFO 16792 --- [restartedMain] com.peng.blog.BlogApplication            : The following profiles are active: dev
2020-02-16 18:27:07.581  INFO 16792 --- [restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@562888d7: startup date [Sun Feb 16 18:27:07 CST 2020]; root of context hierarchy
2020-02-16 18:27:10.090  INFO 16792 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2020-02-16 18:27:10.107  INFO 16792 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-16 18:27:10.108  INFO 16792 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.23
2020-02-16 18:27:10.258  INFO 16792 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-16 18:27:10.258  INFO 16792 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2677 ms
2020-02-16 18:27:10.528  INFO 16792 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2020-02-16 18:27:10.531  INFO 16792 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2020-02-16 18:27:10.532  INFO 16792 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-02-16 18:27:10.532  INFO 16792 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-02-16 18:27:10.532  INFO 16792 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2020-02-16 18:27:14.016  INFO 16792 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-02-16 18:27:14.039  INFO 16792 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-02-16 18:27:14.210  INFO 16792 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.0.12.Final}
2020-02-16 18:27:14.212  INFO 16792 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2020-02-16 18:27:14.213  INFO 16792 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2020-02-16 18:27:14.310  INFO 16792 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2020-02-16 18:27:14.589  INFO 16792 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-16 18:27:15.455  INFO 16792 --- [restartedMain] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000228: Running hbm2ddl schema update
2020-02-16 18:27:16.787  INFO 16792 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 18:27:17.254  INFO 16792 --- [restartedMain] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2020-02-16 18:27:18.177  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@562888d7: startup date [Sun Feb 16 18:27:07 CST 2020]; root of context hierarchy
2020-02-16 18:27:18.273  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[ || /index.html],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.index(org.springframework.data.domain.Pageable,org.springframework.ui.Model)
2020-02-16 18:27:18.275  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.check(int,org.springframework.ui.Model) throws com.peng.blog.exception.NotFoundException
2020-02-16 18:27:18.276  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.client.BlogController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 18:27:18.276  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/content/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.content(int) throws com.peng.blog.exception.NotFoundException
2020-02-16 18:27:18.278  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.add(com.peng.blog.entity.Blog,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:27:18.279  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog || /manage/blog/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.list(org.springframework.data.domain.Pageable,org.springframework.ui.Model,javax.servlet.http.HttpSession)
2020-02-16 18:27:18.279  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/search]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.search(org.springframework.data.domain.Pageable,com.peng.blog.entity.Blog,org.springframework.ui.Model)
2020-02-16 18:27:18.279  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/publish],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.publish(org.springframework.ui.Model,com.peng.blog.entity.Blog)
2020-02-16 18:27:18.280  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:27:18.280  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/del],methods=[GET]}" onto public com.peng.blog.utils.Message com.peng.blog.web.management.BlogManageController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:27:18.281  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/login],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.LoginController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:27:18.281  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/logout],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.LoginController.logout(javax.servlet.http.HttpSession)
2020-02-16 18:27:18.283  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.add(com.peng.blog.entity.Tag,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:27:18.283  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag || /manage/tag/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.list(int,org.springframework.ui.Model)
2020-02-16 18:27:18.284  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 18:27:18.284  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 18:27:18.285  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:27:18.288  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.add(com.peng.blog.entity.Type,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:27:18.288  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/list || /manage/type],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.list(int,org.springframework.ui.Model)
2020-02-16 18:27:18.288  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 18:27:18.288  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 18:27:18.289  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:27:18.290  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t2]}" onto public java.lang.String com.peng.blog.web.TestController.t2(java.lang.String,int,boolean) throws com.peng.blog.exception.NotFoundException
2020-02-16 18:27:18.290  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t1]}" onto public java.lang.String com.peng.blog.web.TestController.t1(java.lang.String) throws com.peng.blog.exception.NotFoundException
2020-02-16 18:27:18.291  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t3]}" onto public java.lang.String com.peng.blog.web.TestController.t3(int)
2020-02-16 18:27:18.293  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-02-16 18:27:18.293  INFO 16792 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-02-16 18:27:18.323  INFO 16792 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 18:27:18.323  INFO 16792 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/index.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 18:27:18.323  INFO 16792 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/welcome] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 18:27:18.324  INFO 16792 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/type/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 18:27:18.324  INFO 16792 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/tag/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 18:27:18.337  INFO 16792 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 18:27:18.337  INFO 16792 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 18:27:18.359  INFO 16792 --- [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in globalExceptionHandler
2020-02-16 18:27:18.382  INFO 16792 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 18:27:18.943  INFO 16792 --- [restartedMain] oConfiguration$WelcomePageHandlerMapping : Adding welcome page: class path resource [static/index.html]
2020-02-16 18:27:19.486  INFO 16792 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-16 18:27:19.544  INFO 16792 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2020-02-16 18:27:19.620  INFO 16792 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2020-02-16 18:27:19.636  INFO 16792 --- [restartedMain] com.peng.blog.BlogApplication            : Started BlogApplication in 13.102 seconds (JVM running for 19.221)
2020-02-16 18:27:25.745  INFO 16792 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-02-16 18:27:25.745  INFO 16792 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2020-02-16 18:27:25.808  INFO 16792 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 62 ms
2020-02-16 18:27:25.858  INFO 16792 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 18:27:26.455  INFO 16792 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 18:27:27.288 ERROR 16792 --- [http-nio-8080-exec-2] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-2] Exception processing template "blog": An error happened during template parsing (template: "class path resource [templates/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:667)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1087)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1061)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.attoparser.ParseException: Unrecognized inline mode: script
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 52 common frames omitted
Caused by: java.lang.IllegalArgumentException: Unrecognized inline mode: script
	at org.thymeleaf.standard.inline.StandardInlineMode.parse(StandardInlineMode.java:71)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.computeAssociatedTemplateMode(OutputExpressionInlinePreProcessorHandler.java:320)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleAttribute(OutputExpressionInlinePreProcessorHandler.java:256)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleAttribute(InlinedOutputExpressionMarkupHandler.java:205)
	at org.attoparser.HtmlCDATAContentElement.handleAttribute(HtmlCDATAContentElement.java:165)
	at org.attoparser.HtmlMarkupHandler.handleAttribute(HtmlMarkupHandler.java:529)
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:593)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:275)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 54 common frames omitted

2020-02-16 18:27:27.300 ERROR 16792 --- [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/blog.html]")] with root cause

java.lang.IllegalArgumentException: Unrecognized inline mode: script
	at org.thymeleaf.standard.inline.StandardInlineMode.parse(StandardInlineMode.java:71)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.computeAssociatedTemplateMode(OutputExpressionInlinePreProcessorHandler.java:320)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleAttribute(OutputExpressionInlinePreProcessorHandler.java:256)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleAttribute(InlinedOutputExpressionMarkupHandler.java:205)
	at org.attoparser.HtmlCDATAContentElement.handleAttribute(HtmlCDATAContentElement.java:165)
	at org.attoparser.HtmlMarkupHandler.handleAttribute(HtmlMarkupHandler.java:529)
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:593)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:275)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:667)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1087)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1061)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-02-16 18:28:42.562  INFO 16792 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 18:28:42.839  INFO 16792 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 18:28:43.870  INFO 16792 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 18:28:44.186  INFO 16792 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。
 # 三、如何创建 Markdown 笔记？
 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记
 # 四、印象笔记 Markdown 笔记支持哪些语法？ 

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
 - 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```

2020-02-16 18:32:27.836  INFO 16792 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/login', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.LoginController.login', args=[peng, 123456, org.apache.catalina.session.StandardSessionFacade@39269202, {}]}
2020-02-16 18:32:27.872  INFO 16792 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : Return result:redirect:/manage/welcome
2020-02-16 18:32:38.850  INFO 16792 --- [http-nio-8080-exec-5] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/tag', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.TagController.list', args=[0, {}]}
2020-02-16 18:32:39.189  INFO 16792 --- [http-nio-8080-exec-5] com.peng.blog.aspect.LogAspect           : Return result:management/manageTag
2020-02-16 18:32:41.428  INFO 16792 --- [http-nio-8080-exec-8] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.list', args=[Page request [number: 0, size 5, sort: lastUpdateTime: DESC], {}, org.apache.catalina.session.StandardSessionFacade@39269202]}
2020-02-16 18:32:41.569  INFO 16792 --- [http-nio-8080-exec-8] com.peng.blog.aspect.LogAspect           : Return result:management/blogs
2020-02-16 18:32:42.765  INFO 16792 --- [http-nio-8080-exec-5] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/edit', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.edit', args=[30, {}]}
2020-02-16 18:32:42.786  INFO 16792 --- [http-nio-8080-exec-5] com.peng.blog.aspect.LogAspect           : Return result:redirect:/manage/blog/publish
2020-02-16 18:32:42.810  INFO 16792 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/publish', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.publish', args=[{blog=Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。
 # 三、如何创建 Markdown 笔记？
 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记
 # 四、印象笔记 Markdown 笔记支持哪些语法？ 

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
 - 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=2020-02-16 18:00:40.0, view_times=14, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。
 # 三、如何创建 Markdown 笔记？
 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记
 # 四、印象笔记 Markdown 笔记支持哪些语法？ 

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
 - 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=2020-02-16 18:00:40.0, view_times=14, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}]}
2020-02-16 18:32:42.829  INFO 16792 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : Return result:management/publishBlog
2020-02-16 18:33:22.224  INFO 16792 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/add', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.add', args=[Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

 # 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记
 # 四、印象笔记 Markdown 笔记支持哪些语法？ 

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
 - 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=null, lastUpdateTime=null, view_times=0, type=Type{id='53', name=null}, tags=[], user=null, tagIds='17'}, org.apache.catalina.session.StandardSessionFacade@39269202, {}]}
2020-02-16 18:33:22.680  INFO 16792 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : Return result:redirect:/manage/blog/publish
2020-02-16 18:33:22.714  INFO 16792 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/publish', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.publish', args=[{message=Message{code=1, msg='标题为"Markdown基本语法学习"的博客更新成功。
您可以继续编辑修改博客。'}, blog=Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

 # 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记
 # 四、印象笔记 Markdown 笔记支持哪些语法？ 

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
 - 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:33:22 CST 2020, view_times=14, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

 # 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记
 # 四、印象笔记 Markdown 笔记支持哪些语法？ 

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
 - 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:33:22 CST 2020, view_times=14, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}]}
2020-02-16 18:33:22.875  INFO 16792 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : Return result:management/publishBlog
2020-02-16 18:33:27.877  INFO 16792 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 18:33:28.053  INFO 16792 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 18:33:28.804  INFO 16792 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 18:33:29.106  INFO 16792 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

 # 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记
 # 四、印象笔记 Markdown 笔记支持哪些语法？ 

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
 - 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```

2020-02-16 18:34:41.898  INFO 16792 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/add', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.add', args=[Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记
# 四、印象笔记 Markdown 笔记支持哪些语法？ 

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
 - 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=null, lastUpdateTime=null, view_times=0, type=Type{id='53', name=null}, tags=[], user=null, tagIds='17'}, org.apache.catalina.session.StandardSessionFacade@39269202, {}]}
2020-02-16 18:34:42.161  INFO 16792 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : Return result:redirect:/manage/blog/publish
2020-02-16 18:34:42.193  INFO 16792 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/publish', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.publish', args=[{message=Message{code=1, msg='标题为"Markdown基本语法学习"的博客更新成功。
您可以继续编辑修改博客。'}, blog=Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记
# 四、印象笔记 Markdown 笔记支持哪些语法？ 

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
 - 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:34:41 CST 2020, view_times=16, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记
# 四、印象笔记 Markdown 笔记支持哪些语法？ 

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
 - 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:34:41 CST 2020, view_times=16, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}]}
2020-02-16 18:34:42.279  INFO 16792 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : Return result:management/publishBlog
2020-02-16 18:34:45.612  INFO 16792 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 18:34:45.745  INFO 16792 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 18:34:46.717  INFO 16792 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 18:34:47.008  INFO 16792 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记
# 四、印象笔记 Markdown 笔记支持哪些语法？ 

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
 - 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```

2020-02-16 18:35:03.702  INFO 16792 --- [http-nio-8080-exec-10] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/add', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.add', args=[Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
 - 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=null, lastUpdateTime=null, view_times=0, type=Type{id='53', name=null}, tags=[], user=null, tagIds='17'}, org.apache.catalina.session.StandardSessionFacade@39269202, {}]}
2020-02-16 18:35:04.050  INFO 16792 --- [http-nio-8080-exec-10] com.peng.blog.aspect.LogAspect           : Return result:redirect:/manage/blog/publish
2020-02-16 18:35:04.065  INFO 16792 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/publish', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.publish', args=[{message=Message{code=1, msg='标题为"Markdown基本语法学习"的博客更新成功。
您可以继续编辑修改博客。'}, blog=Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
 - 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:35:03 CST 2020, view_times=18, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
 - 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:35:03 CST 2020, view_times=18, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}]}
2020-02-16 18:35:04.087  INFO 16792 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : Return result:management/publishBlog
2020-02-16 18:35:06.071  INFO 16792 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 18:35:06.171  INFO 16792 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 18:35:06.704  INFO 16792 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 18:35:06.801  INFO 16792 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
 - 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```

2020-02-16 18:36:33.471  INFO 16792 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/add', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.add', args=[Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=null, lastUpdateTime=null, view_times=0, type=Type{id='53', name=null}, tags=[], user=null, tagIds='17'}, org.apache.catalina.session.StandardSessionFacade@39269202, {}]}
2020-02-16 18:36:33.814  INFO 16792 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : Return result:redirect:/manage/blog/publish
2020-02-16 18:36:33.829  INFO 16792 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/publish', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.publish', args=[{message=Message{code=1, msg='标题为"Markdown基本语法学习"的博客更新成功。
您可以继续编辑修改博客。'}, blog=Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:36:33 CST 2020, view_times=20, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:36:33 CST 2020, view_times=20, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}]}
2020-02-16 18:36:33.915  INFO 16792 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : Return result:management/publishBlog
2020-02-16 18:36:35.942  INFO 16792 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 18:36:36.058  INFO 16792 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 18:36:36.692  INFO 16792 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 18:36:36.860  INFO 16792 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

-插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```

2020-02-16 18:37:49.761  INFO 16792 --- [http-nio-8080-exec-5] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/add', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.add', args=[Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
 2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=null, lastUpdateTime=null, view_times=0, type=Type{id='53', name=null}, tags=[], user=null, tagIds='17'}, org.apache.catalina.session.StandardSessionFacade@39269202, {}]}
2020-02-16 18:37:51.190  INFO 16792 --- [http-nio-8080-exec-5] com.peng.blog.aspect.LogAspect           : Return result:redirect:/manage/blog/publish
2020-02-16 18:37:51.203  INFO 16792 --- [http-nio-8080-exec-10] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/publish', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.publish', args=[{message=Message{code=1, msg='标题为"Markdown基本语法学习"的博客更新成功。
您可以继续编辑修改博客。'}, blog=Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
 2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:37:49 CST 2020, view_times=22, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
 2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:37:49 CST 2020, view_times=22, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}]}
2020-02-16 18:37:51.213  INFO 16792 --- [http-nio-8080-exec-10] com.peng.blog.aspect.LogAspect           : Return result:management/publishBlog
2020-02-16 18:37:55.483  INFO 16792 --- [http-nio-8080-exec-8] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 18:37:56.802  INFO 16792 --- [http-nio-8080-exec-8] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 18:37:57.352  INFO 16792 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 18:37:58.476  INFO 16792 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|
 2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```

2020-02-16 18:38:17.066  INFO 16792 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/add', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.add', args=[Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|  
 2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=null, lastUpdateTime=null, view_times=0, type=Type{id='53', name=null}, tags=[], user=null, tagIds='17'}, org.apache.catalina.session.StandardSessionFacade@39269202, {}]}
2020-02-16 18:38:17.449  INFO 16792 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : Return result:redirect:/manage/blog/publish
2020-02-16 18:38:17.816  INFO 16792 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/publish', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.publish', args=[{message=Message{code=1, msg='标题为"Markdown基本语法学习"的博客更新成功。
您可以继续编辑修改博客。'}, blog=Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|  
 2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:38:17 CST 2020, view_times=24, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|  
 2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:38:17 CST 2020, view_times=24, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}]}
2020-02-16 18:38:17.845  INFO 16792 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : Return result:management/publishBlog
2020-02-16 18:38:21.190  INFO 16792 --- [http-nio-8080-exec-10] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 18:38:21.297  INFO 16792 --- [http-nio-8080-exec-10] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 18:38:21.928  INFO 16792 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 18:38:22.109  INFO 16792 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

> 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|  
 2.效果：

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：
1.语法：
\~\~\~java
插入代码
\~\~\~
2.效果  

```java
System.out.println("Hello world!");
```

2020-02-16 18:39:32.925  INFO 16792 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/add', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.add', args=[Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|  
 2.效果：  
 
| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：
1.语法:  
 \~\~\~java  
 插入代码  
 \~\~\~  
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=null, lastUpdateTime=null, view_times=0, type=Type{id='53', name=null}, tags=[], user=null, tagIds='17'}, org.apache.catalina.session.StandardSessionFacade@39269202, {}]}
2020-02-16 18:39:33.299  INFO 16792 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : Return result:redirect:/manage/blog/publish
2020-02-16 18:39:33.317  INFO 16792 --- [http-nio-8080-exec-10] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/publish', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.publish', args=[{message=Message{code=1, msg='标题为"Markdown基本语法学习"的博客更新成功。
您可以继续编辑修改博客。'}, blog=Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|  
 2.效果：  
 
| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：
1.语法:  
 \~\~\~java  
 插入代码  
 \~\~\~  
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:39:32 CST 2020, view_times=26, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|  
 2.效果：  
 
| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：
1.语法:  
 \~\~\~java  
 插入代码  
 \~\~\~  
2.效果  

```java
System.out.println("Hello world!");
```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:39:32 CST 2020, view_times=26, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}]}
2020-02-16 18:39:33.346  INFO 16792 --- [http-nio-8080-exec-10] com.peng.blog.aspect.LogAspect           : Return result:management/publishBlog
2020-02-16 18:39:35.081  INFO 16792 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 18:39:35.169  INFO 16792 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 18:39:35.705  INFO 16792 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 18:39:35.787  INFO 16792 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|  
 2.效果：  
 
| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：
1.语法:  
 \~\~\~java  
 插入代码  
 \~\~\~  
2.效果  

```java
System.out.println("Hello world!");
```

2020-02-16 18:40:47.132  INFO 16792 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/add', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.add', args=[Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|  
 2.效果：  
 
| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=null, lastUpdateTime=null, view_times=0, type=Type{id='53', name=null}, tags=[], user=null, tagIds='17'}, org.apache.catalina.session.StandardSessionFacade@39269202, {}]}
2020-02-16 18:40:47.329  INFO 16792 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : Return result:redirect:/manage/blog/publish
2020-02-16 18:40:47.346  INFO 16792 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/publish', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.publish', args=[{message=Message{code=1, msg='标题为"Markdown基本语法学习"的博客更新成功。
您可以继续编辑修改博客。'}, blog=Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|  
 2.效果：  
 
| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:40:47 CST 2020, view_times=28, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|  
 2.效果：  
 
| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:40:47 CST 2020, view_times=28, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}]}
2020-02-16 18:40:47.492  INFO 16792 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : Return result:management/publishBlog
2020-02-16 18:40:50.528  INFO 16792 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 18:40:51.138  INFO 16792 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 18:40:51.665  INFO 16792 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 18:40:51.756  INFO 16792 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|  
 2.效果：  
 
| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```

2020-02-16 18:41:09.116  INFO 16792 --- [http-nio-8080-exec-5] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/add', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.add', args=[Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|  
 2.效果：  
 
| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=null, lastUpdateTime=null, view_times=0, type=Type{id='53', name=null}, tags=[], user=null, tagIds='17'}, org.apache.catalina.session.StandardSessionFacade@39269202, {}]}
2020-02-16 18:41:09.433  INFO 16792 --- [http-nio-8080-exec-5] com.peng.blog.aspect.LogAspect           : Return result:redirect:/manage/blog/publish
2020-02-16 18:41:09.451  INFO 16792 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/publish', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.publish', args=[{message=Message{code=1, msg='标题为"Markdown基本语法学习"的博客更新成功。
您可以继续编辑修改博客。'}, blog=Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|  
 2.效果：  
 
| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:41:09 CST 2020, view_times=30, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|  
 2.效果：  
 
| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:41:09 CST 2020, view_times=30, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}]}
2020-02-16 18:41:09.472  INFO 16792 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : Return result:management/publishBlog
2020-02-16 18:41:13.332  INFO 16792 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 18:41:13.434  INFO 16792 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 18:41:14.017  INFO 16792 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 18:41:14.111  INFO 16792 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：
 1.语法：
| 标题一 | 标题二 |
|-\-|-\-|
| 值1 | 值2|  
 2.效果：  
 
| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```

2020-02-16 18:41:29.954  INFO 16792 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/add', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.add', args=[Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  
 
| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=null, lastUpdateTime=null, view_times=0, type=Type{id='53', name=null}, tags=[], user=null, tagIds='17'}, org.apache.catalina.session.StandardSessionFacade@39269202, {}]}
2020-02-16 18:41:30.306  INFO 16792 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : Return result:redirect:/manage/blog/publish
2020-02-16 18:41:30.319  INFO 16792 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/publish', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.publish', args=[{message=Message{code=1, msg='标题为"Markdown基本语法学习"的博客更新成功。
您可以继续编辑修改博客。'}, blog=Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  
 
| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:41:29 CST 2020, view_times=32, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  
 
| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:41:29 CST 2020, view_times=32, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}]}
2020-02-16 18:41:30.352  INFO 16792 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : Return result:management/publishBlog
2020-02-16 18:41:34.522  INFO 16792 --- [http-nio-8080-exec-5] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 18:41:34.612  INFO 16792 --- [http-nio-8080-exec-5] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 18:41:35.251  INFO 16792 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 18:41:35.371  INFO 16792 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  
 
| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```

2020-02-16 18:43:13.090  INFO 16792 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/add', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.add', args=[Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=null, lastUpdateTime=null, view_times=0, type=Type{id='53', name=null}, tags=[], user=null, tagIds='17'}, org.apache.catalina.session.StandardSessionFacade@39269202, {}]}
2020-02-16 18:43:13.342  INFO 16792 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : Return result:redirect:/manage/blog/publish
2020-02-16 18:43:13.358  INFO 16792 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/publish', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.publish', args=[{message=Message{code=1, msg='标题为"Markdown基本语法学习"的博客更新成功。
您可以继续编辑修改博客。'}, blog=Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:43:13 CST 2020, view_times=34, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:43:13 CST 2020, view_times=34, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}]}
2020-02-16 18:43:13.374  INFO 16792 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : Return result:management/publishBlog
2020-02-16 18:45:07.128  INFO 16792 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.list', args=[Page request [number: 0, size 5, sort: lastUpdateTime: DESC], {}, org.apache.catalina.session.StandardSessionFacade@39269202]}
2020-02-16 18:45:07.148  INFO 16792 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : Return result:management/blogs
2020-02-16 18:45:16.680  INFO 16792 --- [http-nio-8080-exec-8] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/edit', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.edit', args=[30, {}]}
2020-02-16 18:45:16.690  INFO 16792 --- [http-nio-8080-exec-8] com.peng.blog.aspect.LogAspect           : Return result:redirect:/manage/blog/publish
2020-02-16 18:45:16.703  INFO 16792 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/publish', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.publish', args=[{blog=Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=2020-02-16 18:43:13.0, view_times=34, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、 Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=2020-02-16 18:43:13.0, view_times=34, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}]}
2020-02-16 18:45:16.719  INFO 16792 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : Return result:management/publishBlog
2020-02-16 18:45:25.198  INFO 16792 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/add', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.add', args=[Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=null, lastUpdateTime=null, view_times=0, type=Type{id='53', name=null}, tags=[], user=null, tagIds='17'}, org.apache.catalina.session.StandardSessionFacade@39269202, {}]}
2020-02-16 18:45:25.538  INFO 16792 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : Return result:redirect:/manage/blog/publish
2020-02-16 18:45:25.555  INFO 16792 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/publish', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.publish', args=[{message=Message{code=1, msg='标题为"Markdown基本语法学习"的博客更新成功。
您可以继续编辑修改博客。'}, blog=Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:45:25 CST 2020, view_times=34, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:45:25 CST 2020, view_times=34, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}]}
2020-02-16 18:45:25.574  INFO 16792 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : Return result:management/publishBlog
2020-02-16 18:45:27.484  INFO 16792 --- [http-nio-8080-exec-5] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 18:45:27.597  INFO 16792 --- [http-nio-8080-exec-5] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 18:45:28.156  INFO 16792 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 18:45:28.386  INFO 16792 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```

2020-02-16 18:47:47.823  INFO 16792 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.list', args=[Page request [number: 0, size 5, sort: lastUpdateTime: DESC], {}, org.apache.catalina.session.StandardSessionFacade@39269202]}
2020-02-16 18:47:47.838  INFO 16792 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : Return result:management/blogs
2020-02-16 18:49:12.055  INFO 9568 --- [restartedMain] com.peng.blog.BlogApplication            : Starting BlogApplication on LAPTOP-3JGI280N with PID 9568 (D:\workspaces\ideaWebWorkSpace\blog\target\classes started by 23185 in D:\workspaces\ideaWebWorkSpace\blog)
2020-02-16 18:49:12.056 DEBUG 9568 --- [restartedMain] com.peng.blog.BlogApplication            : Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2020-02-16 18:49:12.056  INFO 9568 --- [restartedMain] com.peng.blog.BlogApplication            : The following profiles are active: dev
2020-02-16 18:49:12.471  INFO 9568 --- [restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@69fcd924: startup date [Sun Feb 16 18:49:12 CST 2020]; root of context hierarchy
2020-02-16 18:49:16.027  INFO 9568 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2020-02-16 18:49:16.053  INFO 9568 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-16 18:49:16.055  INFO 9568 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.23
2020-02-16 18:49:16.275  INFO 9568 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-16 18:49:16.275  INFO 9568 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3804 ms
2020-02-16 18:49:16.805  INFO 9568 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2020-02-16 18:49:16.812  INFO 9568 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2020-02-16 18:49:16.813  INFO 9568 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-02-16 18:49:16.813  INFO 9568 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-02-16 18:49:16.814  INFO 9568 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2020-02-16 18:49:19.820  INFO 9568 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-02-16 18:49:19.843  INFO 9568 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-02-16 18:49:20.056  INFO 9568 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.0.12.Final}
2020-02-16 18:49:20.060  INFO 9568 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2020-02-16 18:49:20.063  INFO 9568 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2020-02-16 18:49:20.182  INFO 9568 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2020-02-16 18:49:20.494  INFO 9568 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-16 18:49:21.145  INFO 9568 --- [restartedMain] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000228: Running hbm2ddl schema update
2020-02-16 18:49:22.302  INFO 9568 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 18:49:22.894  INFO 9568 --- [restartedMain] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2020-02-16 18:49:23.857  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@69fcd924: startup date [Sun Feb 16 18:49:12 CST 2020]; root of context hierarchy
2020-02-16 18:49:23.927  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[ || /index.html],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.index(org.springframework.data.domain.Pageable,org.springframework.ui.Model)
2020-02-16 18:49:23.928  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.check(int,org.springframework.ui.Model) throws com.peng.blog.exception.NotFoundException
2020-02-16 18:49:23.928  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.client.BlogController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 18:49:23.928  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/content/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.content(int) throws com.peng.blog.exception.NotFoundException
2020-02-16 18:49:23.930  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.add(com.peng.blog.entity.Blog,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:49:23.930  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog || /manage/blog/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.list(org.springframework.data.domain.Pageable,org.springframework.ui.Model,javax.servlet.http.HttpSession)
2020-02-16 18:49:23.931  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/search]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.search(org.springframework.data.domain.Pageable,com.peng.blog.entity.Blog,org.springframework.ui.Model)
2020-02-16 18:49:23.932  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/publish],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.publish(org.springframework.ui.Model,com.peng.blog.entity.Blog)
2020-02-16 18:49:23.932  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:49:23.932  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/del],methods=[GET]}" onto public com.peng.blog.utils.Message com.peng.blog.web.management.BlogManageController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:49:23.933  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/login],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.LoginController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:49:23.934  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/logout],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.LoginController.logout(javax.servlet.http.HttpSession)
2020-02-16 18:49:23.935  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.add(com.peng.blog.entity.Tag,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:49:23.935  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag || /manage/tag/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.list(int,org.springframework.ui.Model)
2020-02-16 18:49:23.936  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 18:49:23.936  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 18:49:23.937  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:49:23.938  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.add(com.peng.blog.entity.Type,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:49:23.938  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/list || /manage/type],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.list(int,org.springframework.ui.Model)
2020-02-16 18:49:23.939  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 18:49:23.940  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 18:49:23.940  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:49:23.941  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t2]}" onto public java.lang.String com.peng.blog.web.TestController.t2(java.lang.String,int,boolean) throws com.peng.blog.exception.NotFoundException
2020-02-16 18:49:23.941  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t1]}" onto public java.lang.String com.peng.blog.web.TestController.t1(java.lang.String) throws com.peng.blog.exception.NotFoundException
2020-02-16 18:49:23.942  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t3]}" onto public java.lang.String com.peng.blog.web.TestController.t3(int)
2020-02-16 18:49:23.943  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-02-16 18:49:23.943  INFO 9568 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-02-16 18:49:23.976  INFO 9568 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 18:49:23.977  INFO 9568 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/index.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 18:49:23.977  INFO 9568 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/welcome] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 18:49:23.977  INFO 9568 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/type/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 18:49:23.977  INFO 9568 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/tag/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 18:49:23.992  INFO 9568 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 18:49:23.992  INFO 9568 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 18:49:24.013  INFO 9568 --- [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in globalExceptionHandler
2020-02-16 18:49:24.035  INFO 9568 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 18:49:24.506  INFO 9568 --- [restartedMain] oConfiguration$WelcomePageHandlerMapping : Adding welcome page: class path resource [static/index.html]
2020-02-16 18:49:24.913  INFO 9568 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-16 18:49:24.963  INFO 9568 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2020-02-16 18:49:25.027  INFO 9568 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2020-02-16 18:49:25.032  INFO 9568 --- [restartedMain] com.peng.blog.BlogApplication            : Started BlogApplication in 13.706 seconds (JVM running for 16.349)
2020-02-16 18:50:38.689  INFO 9568 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-02-16 18:50:38.690  INFO 9568 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2020-02-16 18:50:38.747  INFO 9568 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 57 ms
2020-02-16 18:50:38.814  INFO 9568 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 18:50:39.386  INFO 9568 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 18:50:40.827  INFO 9568 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 18:50:41.151  INFO 9568 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```

2020-02-16 18:53:42.308  INFO 13040 --- [restartedMain] com.peng.blog.BlogApplication            : Starting BlogApplication on LAPTOP-3JGI280N with PID 13040 (D:\workspaces\ideaWebWorkSpace\blog\target\classes started by 23185 in D:\workspaces\ideaWebWorkSpace\blog)
2020-02-16 18:53:42.309 DEBUG 13040 --- [restartedMain] com.peng.blog.BlogApplication            : Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2020-02-16 18:53:42.311  INFO 13040 --- [restartedMain] com.peng.blog.BlogApplication            : The following profiles are active: dev
2020-02-16 18:53:42.745  INFO 13040 --- [restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2c7c814e: startup date [Sun Feb 16 18:53:42 CST 2020]; root of context hierarchy
2020-02-16 18:53:44.873  INFO 13040 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2020-02-16 18:53:44.882  INFO 13040 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-16 18:53:44.885  INFO 13040 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.23
2020-02-16 18:53:45.072  INFO 13040 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-16 18:53:45.072  INFO 13040 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2327 ms
2020-02-16 18:53:45.407  INFO 13040 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2020-02-16 18:53:45.416  INFO 13040 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2020-02-16 18:53:45.418  INFO 13040 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-02-16 18:53:45.418  INFO 13040 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-02-16 18:53:45.419  INFO 13040 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2020-02-16 18:53:46.945  INFO 13040 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-02-16 18:53:46.960  INFO 13040 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-02-16 18:53:47.019  INFO 13040 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.0.12.Final}
2020-02-16 18:53:47.020  INFO 13040 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2020-02-16 18:53:47.021  INFO 13040 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2020-02-16 18:53:47.053  INFO 13040 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2020-02-16 18:53:47.202  INFO 13040 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-16 18:53:47.641  INFO 13040 --- [restartedMain] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000228: Running hbm2ddl schema update
2020-02-16 18:53:48.537  INFO 13040 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 18:53:48.809  INFO 13040 --- [restartedMain] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2020-02-16 18:53:49.498  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2c7c814e: startup date [Sun Feb 16 18:53:42 CST 2020]; root of context hierarchy
2020-02-16 18:53:49.562  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[ || /index.html],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.index(org.springframework.data.domain.Pageable,org.springframework.ui.Model)
2020-02-16 18:53:49.562  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.check(int,org.springframework.ui.Model) throws com.peng.blog.exception.NotFoundException
2020-02-16 18:53:49.563  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.client.BlogController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 18:53:49.563  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/content/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.content(int) throws com.peng.blog.exception.NotFoundException
2020-02-16 18:53:49.566  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.add(com.peng.blog.entity.Blog,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:53:49.567  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog || /manage/blog/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.list(org.springframework.data.domain.Pageable,org.springframework.ui.Model,javax.servlet.http.HttpSession)
2020-02-16 18:53:49.567  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/search]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.search(org.springframework.data.domain.Pageable,com.peng.blog.entity.Blog,org.springframework.ui.Model)
2020-02-16 18:53:49.567  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/publish],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.publish(org.springframework.ui.Model,com.peng.blog.entity.Blog)
2020-02-16 18:53:49.568  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:53:49.568  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/del],methods=[GET]}" onto public com.peng.blog.utils.Message com.peng.blog.web.management.BlogManageController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:53:49.569  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/logout],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.LoginController.logout(javax.servlet.http.HttpSession)
2020-02-16 18:53:49.570  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/login],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.LoginController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:53:49.573  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.add(com.peng.blog.entity.Tag,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:53:49.573  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag || /manage/tag/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.list(int,org.springframework.ui.Model)
2020-02-16 18:53:49.574  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 18:53:49.574  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 18:53:49.575  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:53:49.577  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.add(com.peng.blog.entity.Type,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:53:49.577  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/list || /manage/type],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.list(int,org.springframework.ui.Model)
2020-02-16 18:53:49.577  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 18:53:49.578  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 18:53:49.578  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 18:53:49.579  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t2]}" onto public java.lang.String com.peng.blog.web.TestController.t2(java.lang.String,int,boolean) throws com.peng.blog.exception.NotFoundException
2020-02-16 18:53:49.579  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t1]}" onto public java.lang.String com.peng.blog.web.TestController.t1(java.lang.String) throws com.peng.blog.exception.NotFoundException
2020-02-16 18:53:49.580  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t3]}" onto public java.lang.String com.peng.blog.web.TestController.t3(int)
2020-02-16 18:53:49.582  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-02-16 18:53:49.583  INFO 13040 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-02-16 18:53:49.607  INFO 13040 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 18:53:49.607  INFO 13040 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/index.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 18:53:49.607  INFO 13040 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/welcome] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 18:53:49.607  INFO 13040 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/type/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 18:53:49.607  INFO 13040 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/tag/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 18:53:49.619  INFO 13040 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 18:53:49.619  INFO 13040 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 18:53:49.640  INFO 13040 --- [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in globalExceptionHandler
2020-02-16 18:53:49.706  INFO 13040 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 18:53:49.991  INFO 13040 --- [restartedMain] oConfiguration$WelcomePageHandlerMapping : Adding welcome page: class path resource [static/index.html]
2020-02-16 18:53:50.361  INFO 13040 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-16 18:53:50.411  INFO 13040 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2020-02-16 18:53:50.485  INFO 13040 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2020-02-16 18:53:50.489  INFO 13040 --- [restartedMain] com.peng.blog.BlogApplication            : Started BlogApplication in 8.829 seconds (JVM running for 10.293)
2020-02-16 18:53:58.020  INFO 13040 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-02-16 18:53:58.020  INFO 13040 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2020-02-16 18:53:58.085  INFO 13040 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 64 ms
2020-02-16 18:53:58.134  INFO 13040 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 18:53:58.585  INFO 13040 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 18:54:00.615  INFO 13040 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 18:54:01.668  INFO 13040 --- [http-nio-8080-exec-7] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```

2020-02-16 18:54:49.862  INFO 13040 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/login', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.LoginController.login', args=[peng, 123456, org.apache.catalina.session.StandardSessionFacade@332ddd15, {}]}
2020-02-16 18:54:49.891  INFO 13040 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : Return result:redirect:/manage/welcome
2020-02-16 18:54:52.219  INFO 13040 --- [http-nio-8080-exec-8] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.list', args=[Page request [number: 0, size 5, sort: lastUpdateTime: DESC], {}, org.apache.catalina.session.StandardSessionFacade@332ddd15]}
2020-02-16 18:54:52.271  INFO 13040 --- [http-nio-8080-exec-8] com.peng.blog.aspect.LogAspect           : Return result:management/blogs
2020-02-16 18:54:53.442  INFO 13040 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/publish', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.publish', args=[{blog=Blog{id='null', title='null', content='null', original=null, recommend_toggle=false, share_toggle=false, appreciate_toggle=false, comment_toggle=false, publish_toggle=false, picture_addr='null', description='null', createTime=null, lastUpdateTime=null, view_times=0, type=null, tags=[], user=null, tagIds='null'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, Blog{id='null', title='null', content='null', original=null, recommend_toggle=false, share_toggle=false, appreciate_toggle=false, comment_toggle=false, publish_toggle=false, picture_addr='null', description='null', createTime=null, lastUpdateTime=null, view_times=0, type=null, tags=[], user=null, tagIds='null'}]}
2020-02-16 18:54:53.462  INFO 13040 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : Return result:management/publishBlog
2020-02-16 18:54:55.063  INFO 13040 --- [http-nio-8080-exec-10] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.list', args=[Page request [number: 0, size 5, sort: lastUpdateTime: DESC], {}, org.apache.catalina.session.StandardSessionFacade@332ddd15]}
2020-02-16 18:54:55.106  INFO 13040 --- [http-nio-8080-exec-10] com.peng.blog.aspect.LogAspect           : Return result:management/blogs
2020-02-16 18:54:59.641  INFO 13040 --- [http-nio-8080-exec-5] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/edit', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.edit', args=[30, {}]}
2020-02-16 18:54:59.655  INFO 13040 --- [http-nio-8080-exec-5] com.peng.blog.aspect.LogAspect           : Return result:redirect:/manage/blog/publish
2020-02-16 18:54:59.669  INFO 13040 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/publish', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.publish', args=[{blog=Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=2020-02-16 18:45:25.0, view_times=40, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三
 
 - 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=2020-02-16 18:45:25.0, view_times=40, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}]}
2020-02-16 18:54:59.690  INFO 13040 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : Return result:management/publishBlog
2020-02-16 18:55:19.510  INFO 13040 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/add', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.add', args=[Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三  
- 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=null, lastUpdateTime=null, view_times=0, type=Type{id='53', name=null}, tags=[], user=null, tagIds='17'}, org.apache.catalina.session.StandardSessionFacade@332ddd15, {}]}
2020-02-16 18:55:19.721  INFO 13040 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : Return result:redirect:/manage/blog/publish
2020-02-16 18:55:19.754  INFO 13040 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/publish', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.publish', args=[{message=Message{code=1, msg='标题为"Markdown基本语法学习"的博客更新成功。
您可以继续编辑修改博客。'}, blog=Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三  
- 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:55:19 CST 2020, view_times=40, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三  
- 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:55:19 CST 2020, view_times=40, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}]}
2020-02-16 18:55:19.798  INFO 13040 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : Return result:management/publishBlog
2020-02-16 18:55:23.074  INFO 13040 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.list', args=[Page request [number: 0, size 5, sort: lastUpdateTime: DESC], {}, org.apache.catalina.session.StandardSessionFacade@332ddd15]}
2020-02-16 18:55:23.119  INFO 13040 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : Return result:management/blogs
2020-02-16 18:55:28.455  INFO 13040 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 18:55:29.161  INFO 13040 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 18:55:29.781  INFO 13040 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 18:55:29.896  INFO 13040 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三  
- 插入连接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```

2020-02-16 18:55:46.926  INFO 13040 --- [http-nio-8080-exec-5] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/add', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.add', args=[Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三  
- 插入链接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=null, lastUpdateTime=null, view_times=0, type=Type{id='53', name=null}, tags=[], user=null, tagIds='17'}, org.apache.catalina.session.StandardSessionFacade@332ddd15, {}]}
2020-02-16 18:55:47.270  INFO 13040 --- [http-nio-8080-exec-5] com.peng.blog.aspect.LogAspect           : Return result:redirect:/manage/blog/publish
2020-02-16 18:55:47.285  INFO 13040 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/manage/blog/publish', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.management.BlogManageController.publish', args=[{message=Message{code=1, msg='标题为"Markdown基本语法学习"的博客更新成功。
您可以继续编辑修改博客。'}, blog=Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三  
- 插入链接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:55:46 CST 2020, view_times=42, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}, org.springframework.validation.BindingResult.blog=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, Blog{id='30', title='Markdown基本语法学习', content='# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三  
- 插入链接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```
', original=0, recommend_toggle=true, share_toggle=true, appreciate_toggle=true, comment_toggle=true, publish_toggle=true, picture_addr='https://i.picsum.photos/id/1/800/600.jpg', description='Markdown 是一种轻量级的「标记语言」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果', createTime=2020-02-15 20:56:42.0, lastUpdateTime=Sun Feb 16 18:55:46 CST 2020, view_times=42, type=Type{id='53', name=各类工具学习}, tags=[Tag{id='17', name='Markdown的使用'}], user=User{id='1', nickname='PENG', username='PENG', password='e10adc3949ba59abbe56e057f20f883e', email='231@qq.com', avatar='/images/headerImg.jpeg', admin=true, latest_time=2020-02-11 16:25:15.0, create_time=2020-02-11 16:25:02.0}, tagIds='17'}]}
2020-02-16 18:55:47.339  INFO 13040 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : Return result:management/publishBlog
2020-02-16 18:55:48.776  INFO 13040 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 18:55:48.956  INFO 13040 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 18:55:49.650  INFO 13040 --- [http-nio-8080-exec-10] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='0:0:0:0:0:0:0:1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 18:55:50.055  INFO 13040 --- [http-nio-8080-exec-10] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三  
- 插入链接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```

2020-02-16 19:06:16.613  INFO 18136 --- [restartedMain] com.peng.blog.BlogApplication            : Starting BlogApplication on LAPTOP-3JGI280N with PID 18136 (D:\workspaces\ideaWebWorkSpace\blog\target\classes started by 23185 in D:\workspaces\ideaWebWorkSpace\blog)
2020-02-16 19:06:16.614 DEBUG 18136 --- [restartedMain] com.peng.blog.BlogApplication            : Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2020-02-16 19:06:16.614  INFO 18136 --- [restartedMain] com.peng.blog.BlogApplication            : The following profiles are active: dev
2020-02-16 19:06:16.933  INFO 18136 --- [restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4689bc8c: startup date [Sun Feb 16 19:06:16 CST 2020]; root of context hierarchy
2020-02-16 19:06:19.260  INFO 18136 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2020-02-16 19:06:19.270  INFO 18136 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-16 19:06:19.271  INFO 18136 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.23
2020-02-16 19:06:19.396  INFO 18136 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-16 19:06:19.396  INFO 18136 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2463 ms
2020-02-16 19:06:19.694  INFO 18136 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2020-02-16 19:06:19.700  INFO 18136 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2020-02-16 19:06:19.701  INFO 18136 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-02-16 19:06:19.702  INFO 18136 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-02-16 19:06:19.702  INFO 18136 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2020-02-16 19:06:21.307  INFO 18136 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-02-16 19:06:21.318  INFO 18136 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-02-16 19:06:21.383  INFO 18136 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.0.12.Final}
2020-02-16 19:06:21.387  INFO 18136 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2020-02-16 19:06:21.389  INFO 18136 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2020-02-16 19:06:21.435  INFO 18136 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2020-02-16 19:06:21.595  INFO 18136 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-16 19:06:22.025  INFO 18136 --- [restartedMain] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000228: Running hbm2ddl schema update
2020-02-16 19:06:22.696  INFO 18136 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 19:06:22.965  INFO 18136 --- [restartedMain] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2020-02-16 19:06:23.687  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4689bc8c: startup date [Sun Feb 16 19:06:16 CST 2020]; root of context hierarchy
2020-02-16 19:06:23.752  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[ || /index.html],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.index(org.springframework.data.domain.Pageable,org.springframework.ui.Model)
2020-02-16 19:06:23.753  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.check(int,org.springframework.ui.Model) throws com.peng.blog.exception.NotFoundException
2020-02-16 19:06:23.753  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.client.BlogController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 19:06:23.753  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/content/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.content(int) throws com.peng.blog.exception.NotFoundException
2020-02-16 19:06:23.755  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.add(com.peng.blog.entity.Blog,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:06:23.755  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog || /manage/blog/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.list(org.springframework.data.domain.Pageable,org.springframework.ui.Model,javax.servlet.http.HttpSession)
2020-02-16 19:06:23.755  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/search]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.search(org.springframework.data.domain.Pageable,com.peng.blog.entity.Blog,org.springframework.ui.Model)
2020-02-16 19:06:23.756  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/publish],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.publish(org.springframework.ui.Model,com.peng.blog.entity.Blog)
2020-02-16 19:06:23.756  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:06:23.756  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/del],methods=[GET]}" onto public com.peng.blog.utils.Message com.peng.blog.web.management.BlogManageController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:06:23.757  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/login],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.LoginController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:06:23.757  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/logout],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.LoginController.logout(javax.servlet.http.HttpSession)
2020-02-16 19:06:23.759  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.add(com.peng.blog.entity.Tag,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:06:23.759  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag || /manage/tag/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.list(int,org.springframework.ui.Model)
2020-02-16 19:06:23.759  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 19:06:23.760  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 19:06:23.761  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:06:23.764  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.add(com.peng.blog.entity.Type,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:06:23.764  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/list || /manage/type],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.list(int,org.springframework.ui.Model)
2020-02-16 19:06:23.765  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 19:06:23.765  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 19:06:23.765  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:06:23.766  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t1]}" onto public java.lang.String com.peng.blog.web.TestController.t1(java.lang.String) throws com.peng.blog.exception.NotFoundException
2020-02-16 19:06:23.766  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t2]}" onto public java.lang.String com.peng.blog.web.TestController.t2(java.lang.String,int,boolean) throws com.peng.blog.exception.NotFoundException
2020-02-16 19:06:23.766  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t3]}" onto public java.lang.String com.peng.blog.web.TestController.t3(int)
2020-02-16 19:06:23.768  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-02-16 19:06:23.768  INFO 18136 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-02-16 19:06:23.792  INFO 18136 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 19:06:23.792  INFO 18136 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/index.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 19:06:23.792  INFO 18136 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/welcome] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 19:06:23.793  INFO 18136 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/type/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 19:06:23.793  INFO 18136 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/tag/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 19:06:23.810  INFO 18136 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 19:06:23.811  INFO 18136 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 19:06:23.832  INFO 18136 --- [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in globalExceptionHandler
2020-02-16 19:06:23.853  INFO 18136 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 19:06:24.116  INFO 18136 --- [restartedMain] oConfiguration$WelcomePageHandlerMapping : Adding welcome page: class path resource [static/index.html]
2020-02-16 19:06:24.514  INFO 18136 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-16 19:06:24.583  INFO 18136 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2020-02-16 19:06:24.645  INFO 18136 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2020-02-16 19:06:24.652  INFO 18136 --- [restartedMain] com.peng.blog.BlogApplication            : Started BlogApplication in 8.846 seconds (JVM running for 10.934)
2020-02-16 19:06:53.475  INFO 18136 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-02-16 19:06:53.476  INFO 18136 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2020-02-16 19:06:53.535  INFO 18136 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 58 ms
2020-02-16 19:06:53.578  INFO 18136 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 19:06:53.864  INFO 18136 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 19:06:55.077  INFO 18136 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 19:06:55.088  INFO 18136 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三  
- 插入链接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```

2020-02-16 19:06:58.766  INFO 18136 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 19:06:59.007  INFO 18136 --- [http-nio-8080-exec-4] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 19:06:59.464  INFO 18136 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 19:06:59.482  INFO 18136 --- [http-nio-8080-exec-9] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三  
- 插入链接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```

2020-02-16 19:07:01.407  INFO 18136 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 19:07:01.509  INFO 18136 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 19:07:02.096  INFO 18136 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 19:07:02.111  INFO 18136 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三  
- 插入链接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```

2020-02-16 19:07:18.227  INFO 18136 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.index', args=[Page request [number: 0, size 6, sort: createTime: DESC], {}]}
2020-02-16 19:07:18.401  WARN 18136 --- [http-nio-8080-exec-1] org.hibernate.orm.deprecation            : HHH90000016: Found use of deprecated 'collection property' syntax in HQL/JPQL query [null.size]; use collection function syntax instead [size(null)].
2020-02-16 19:07:18.489  WARN 18136 --- [http-nio-8080-exec-1] org.hibernate.orm.deprecation            : HHH90000016: Found use of deprecated 'collection property' syntax in HQL/JPQL query [null.size]; use collection function syntax instead [size(null)].
2020-02-16 19:07:18.570  INFO 18136 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : Return result:index
2020-02-16 19:08:06.291  INFO 8280 --- [restartedMain] com.peng.blog.BlogApplication            : Starting BlogApplication on LAPTOP-3JGI280N with PID 8280 (D:\workspaces\ideaWebWorkSpace\blog\target\classes started by 23185 in D:\workspaces\ideaWebWorkSpace\blog)
2020-02-16 19:08:06.293 DEBUG 8280 --- [restartedMain] com.peng.blog.BlogApplication            : Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2020-02-16 19:08:06.293  INFO 8280 --- [restartedMain] com.peng.blog.BlogApplication            : The following profiles are active: dev
2020-02-16 19:08:06.809  INFO 8280 --- [restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3152bc: startup date [Sun Feb 16 19:08:06 CST 2020]; root of context hierarchy
2020-02-16 19:08:09.169  INFO 8280 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2020-02-16 19:08:09.179  INFO 8280 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-16 19:08:09.180  INFO 8280 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.23
2020-02-16 19:08:09.402  INFO 8280 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-16 19:08:09.402  INFO 8280 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2593 ms
2020-02-16 19:08:09.665  INFO 8280 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2020-02-16 19:08:09.669  INFO 8280 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2020-02-16 19:08:09.670  INFO 8280 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-02-16 19:08:09.670  INFO 8280 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-02-16 19:08:09.671  INFO 8280 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2020-02-16 19:08:11.286  INFO 8280 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-02-16 19:08:11.304  INFO 8280 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-02-16 19:08:11.373  INFO 8280 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.0.12.Final}
2020-02-16 19:08:11.375  INFO 8280 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2020-02-16 19:08:11.376  INFO 8280 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2020-02-16 19:08:11.423  INFO 8280 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2020-02-16 19:08:11.607  INFO 8280 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-16 19:08:12.066  INFO 8280 --- [restartedMain] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000228: Running hbm2ddl schema update
2020-02-16 19:08:12.789  INFO 8280 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 19:08:13.125  INFO 8280 --- [restartedMain] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2020-02-16 19:08:13.844  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3152bc: startup date [Sun Feb 16 19:08:06 CST 2020]; root of context hierarchy
2020-02-16 19:08:13.910  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[ || /index.html],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.index(org.springframework.data.domain.Pageable,org.springframework.ui.Model)
2020-02-16 19:08:13.911  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.check(int,org.springframework.ui.Model) throws com.peng.blog.exception.NotFoundException
2020-02-16 19:08:13.911  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.client.BlogController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 19:08:13.911  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/content/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.content(int) throws com.peng.blog.exception.NotFoundException
2020-02-16 19:08:13.913  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.add(com.peng.blog.entity.Blog,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:08:13.913  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog || /manage/blog/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.list(org.springframework.data.domain.Pageable,org.springframework.ui.Model,javax.servlet.http.HttpSession)
2020-02-16 19:08:13.913  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/search]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.search(org.springframework.data.domain.Pageable,com.peng.blog.entity.Blog,org.springframework.ui.Model)
2020-02-16 19:08:13.914  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/publish],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.publish(org.springframework.ui.Model,com.peng.blog.entity.Blog)
2020-02-16 19:08:13.914  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:08:13.914  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/del],methods=[GET]}" onto public com.peng.blog.utils.Message com.peng.blog.web.management.BlogManageController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:08:13.915  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/logout],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.LoginController.logout(javax.servlet.http.HttpSession)
2020-02-16 19:08:13.915  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/login],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.LoginController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:08:13.918  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.add(com.peng.blog.entity.Tag,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:08:13.918  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag || /manage/tag/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.list(int,org.springframework.ui.Model)
2020-02-16 19:08:13.919  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 19:08:13.920  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 19:08:13.921  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:08:13.923  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.add(com.peng.blog.entity.Type,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:08:13.923  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/list || /manage/type],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.list(int,org.springframework.ui.Model)
2020-02-16 19:08:13.924  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 19:08:13.924  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 19:08:13.924  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:08:13.925  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t2]}" onto public java.lang.String com.peng.blog.web.TestController.t2(java.lang.String,int,boolean) throws com.peng.blog.exception.NotFoundException
2020-02-16 19:08:13.926  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t1]}" onto public java.lang.String com.peng.blog.web.TestController.t1(java.lang.String) throws com.peng.blog.exception.NotFoundException
2020-02-16 19:08:13.926  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t3]}" onto public java.lang.String com.peng.blog.web.TestController.t3(int)
2020-02-16 19:08:13.927  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-02-16 19:08:13.928  INFO 8280 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-02-16 19:08:13.962  INFO 8280 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 19:08:13.962  INFO 8280 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/index.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 19:08:13.962  INFO 8280 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/welcome] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 19:08:13.963  INFO 8280 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/type/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 19:08:13.963  INFO 8280 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/tag/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 19:08:13.981  INFO 8280 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 19:08:13.981  INFO 8280 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 19:08:14.008  INFO 8280 --- [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in globalExceptionHandler
2020-02-16 19:08:14.062  INFO 8280 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 19:08:14.365  INFO 8280 --- [restartedMain] oConfiguration$WelcomePageHandlerMapping : Adding welcome page: class path resource [static/index.html]
2020-02-16 19:08:14.755  INFO 8280 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-16 19:08:14.803  INFO 8280 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2020-02-16 19:08:14.865  INFO 8280 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2020-02-16 19:08:14.871  INFO 8280 --- [restartedMain] com.peng.blog.BlogApplication            : Started BlogApplication in 9.218 seconds (JVM running for 10.754)
2020-02-16 19:08:39.313  INFO 8280 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-02-16 19:08:39.313  INFO 8280 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2020-02-16 19:08:39.371  INFO 8280 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 58 ms
2020-02-16 19:08:39.429  INFO 8280 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.index', args=[Page request [number: 0, size 6, sort: createTime: DESC], {}]}
2020-02-16 19:08:39.966  WARN 8280 --- [http-nio-8080-exec-1] org.hibernate.orm.deprecation            : HHH90000016: Found use of deprecated 'collection property' syntax in HQL/JPQL query [null.size]; use collection function syntax instead [size(null)].
2020-02-16 19:08:40.014  WARN 8280 --- [http-nio-8080-exec-1] org.hibernate.orm.deprecation            : HHH90000016: Found use of deprecated 'collection property' syntax in HQL/JPQL query [null.size]; use collection function syntax instead [size(null)].
2020-02-16 19:08:40.075  INFO 8280 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : Return result:index
2020-02-16 19:10:42.221  INFO 8280 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.index', args=[Page request [number: 0, size 6, sort: createTime: DESC], {}]}
2020-02-16 19:10:42.428  INFO 8280 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : Return result:index
2020-02-16 19:11:36.394  INFO 8280 --- [http-nio-8080-exec-5] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.index', args=[Page request [number: 0, size 6, sort: createTime: DESC], {}]}
2020-02-16 19:11:36.476  INFO 8280 --- [http-nio-8080-exec-5] com.peng.blog.aspect.LogAspect           : Return result:index
2020-02-16 19:13:09.031  INFO 8280 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 19:13:09.410  INFO 8280 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 19:13:09.863  INFO 8280 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 19:13:09.897  INFO 8280 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三  
- 插入链接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```

2020-02-16 19:17:10.639  INFO 8280 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.index', args=[Page request [number: 0, size 6, sort: createTime: DESC], {}]}
2020-02-16 19:17:10.826  INFO 8280 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : Return result:index
2020-02-16 19:17:41.141  INFO 8280 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.index', args=[Page request [number: 0, size 6, sort: createTime: DESC], {}]}
2020-02-16 19:17:41.209  INFO 8280 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : Return result:index
2020-02-16 19:33:09.356  INFO 17552 --- [restartedMain] com.peng.blog.BlogApplication            : Starting BlogApplication on LAPTOP-3JGI280N with PID 17552 (D:\workspaces\ideaWebWorkSpace\blog\target\classes started by 23185 in D:\workspaces\ideaWebWorkSpace\blog)
2020-02-16 19:33:09.358 DEBUG 17552 --- [restartedMain] com.peng.blog.BlogApplication            : Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2020-02-16 19:33:09.360  INFO 17552 --- [restartedMain] com.peng.blog.BlogApplication            : The following profiles are active: dev
2020-02-16 19:33:09.706  INFO 17552 --- [restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@45d1100c: startup date [Sun Feb 16 19:33:09 CST 2020]; root of context hierarchy
2020-02-16 19:33:11.981  INFO 17552 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2020-02-16 19:33:11.990  INFO 17552 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-16 19:33:11.991  INFO 17552 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.23
2020-02-16 19:33:12.137  INFO 17552 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-16 19:33:12.137  INFO 17552 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2431 ms
2020-02-16 19:33:12.446  INFO 17552 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2020-02-16 19:33:12.450  INFO 17552 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2020-02-16 19:33:12.451  INFO 17552 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-02-16 19:33:12.451  INFO 17552 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-02-16 19:33:12.451  INFO 17552 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2020-02-16 19:33:13.823  INFO 17552 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-02-16 19:33:13.835  INFO 17552 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-02-16 19:33:13.901  INFO 17552 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.0.12.Final}
2020-02-16 19:33:13.902  INFO 17552 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2020-02-16 19:33:13.903  INFO 17552 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2020-02-16 19:33:13.938  INFO 17552 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2020-02-16 19:33:14.087  INFO 17552 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-16 19:33:14.666  INFO 17552 --- [restartedMain] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000228: Running hbm2ddl schema update
2020-02-16 19:33:15.493  INFO 17552 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 19:33:15.792  INFO 17552 --- [restartedMain] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2020-02-16 19:33:16.490  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@45d1100c: startup date [Sun Feb 16 19:33:09 CST 2020]; root of context hierarchy
2020-02-16 19:33:16.571  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[ || /index.html],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.index(org.springframework.data.domain.Pageable,org.springframework.ui.Model)
2020-02-16 19:33:16.572  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.check(int,org.springframework.ui.Model) throws com.peng.blog.exception.NotFoundException
2020-02-16 19:33:16.572  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.client.BlogController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 19:33:16.573  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/content/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.content(int) throws com.peng.blog.exception.NotFoundException
2020-02-16 19:33:16.574  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.add(com.peng.blog.entity.Blog,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:33:16.575  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog || /manage/blog/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.list(org.springframework.data.domain.Pageable,org.springframework.ui.Model,javax.servlet.http.HttpSession)
2020-02-16 19:33:16.575  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/search]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.search(org.springframework.data.domain.Pageable,com.peng.blog.entity.Blog,org.springframework.ui.Model)
2020-02-16 19:33:16.575  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:33:16.575  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/del],methods=[GET]}" onto public com.peng.blog.utils.Message com.peng.blog.web.management.BlogManageController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:33:16.576  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/publish],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.publish(org.springframework.ui.Model,com.peng.blog.entity.Blog)
2020-02-16 19:33:16.576  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/login],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.LoginController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:33:16.577  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/logout],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.LoginController.logout(javax.servlet.http.HttpSession)
2020-02-16 19:33:16.579  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.add(com.peng.blog.entity.Tag,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:33:16.579  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag || /manage/tag/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.list(int,org.springframework.ui.Model)
2020-02-16 19:33:16.579  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 19:33:16.580  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 19:33:16.580  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:33:16.581  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.add(com.peng.blog.entity.Type,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:33:16.581  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/list || /manage/type],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.list(int,org.springframework.ui.Model)
2020-02-16 19:33:16.582  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 19:33:16.582  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 19:33:16.582  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 19:33:16.583  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t3]}" onto public java.lang.String com.peng.blog.web.TestController.t3(int)
2020-02-16 19:33:16.584  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t2]}" onto public java.lang.String com.peng.blog.web.TestController.t2(java.lang.String,int,boolean) throws com.peng.blog.exception.NotFoundException
2020-02-16 19:33:16.584  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t1]}" onto public java.lang.String com.peng.blog.web.TestController.t1(java.lang.String) throws com.peng.blog.exception.NotFoundException
2020-02-16 19:33:16.585  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-02-16 19:33:16.585  INFO 17552 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-02-16 19:33:16.613  INFO 17552 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 19:33:16.613  INFO 17552 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/index.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 19:33:16.613  INFO 17552 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/welcome] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 19:33:16.613  INFO 17552 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/type/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 19:33:16.613  INFO 17552 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/tag/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 19:33:16.628  INFO 17552 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 19:33:16.629  INFO 17552 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 19:33:16.649  INFO 17552 --- [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in globalExceptionHandler
2020-02-16 19:33:16.689  INFO 17552 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 19:33:16.982  INFO 17552 --- [restartedMain] oConfiguration$WelcomePageHandlerMapping : Adding welcome page: class path resource [static/index.html]
2020-02-16 19:33:17.452  INFO 17552 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-16 19:33:17.498  INFO 17552 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2020-02-16 19:33:17.559  INFO 17552 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2020-02-16 19:33:17.563  INFO 17552 --- [restartedMain] com.peng.blog.BlogApplication            : Started BlogApplication in 9.092 seconds (JVM running for 10.953)
2020-02-16 19:33:41.801  INFO 17552 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-02-16 19:33:41.801  INFO 17552 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2020-02-16 19:33:41.869  INFO 17552 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 68 ms
2020-02-16 19:33:41.918  INFO 17552 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.index', args=[Page request [number: 0, size 6, sort: createTime: DESC], {}]}
2020-02-16 19:33:42.169  WARN 17552 --- [http-nio-8080-exec-1] org.hibernate.orm.deprecation            : HHH90000016: Found use of deprecated 'collection property' syntax in HQL/JPQL query [null.size]; use collection function syntax instead [size(null)].
2020-02-16 19:33:42.225  WARN 17552 --- [http-nio-8080-exec-1] org.hibernate.orm.deprecation            : HHH90000016: Found use of deprecated 'collection property' syntax in HQL/JPQL query [null.size]; use collection function syntax instead [size(null)].
2020-02-16 19:33:42.263  INFO 17552 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : Return result:index
2020-02-16 19:33:46.770  INFO 17552 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 19:33:47.097  INFO 17552 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 19:33:47.762  INFO 17552 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 19:33:47.786  INFO 17552 --- [http-nio-8080-exec-6] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三  
- 插入链接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```

2020-02-16 19:34:06.913  INFO 17552 --- [http-nio-8080-exec-8] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 19:34:08.269  INFO 17552 --- [http-nio-8080-exec-8] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 19:34:09.353  INFO 17552 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 19:34:09.368  INFO 17552 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三  
- 插入链接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```

2020-02-16 19:50:56.835  INFO 17552 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.index', args=[Page request [number: 0, size 6, sort: createTime: DESC], {}]}
2020-02-16 19:50:56.962  INFO 17552 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : Return result:index
2020-02-16 19:50:58.650  INFO 17552 --- [http-nio-8080-exec-8] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 19:50:59.108  INFO 17552 --- [http-nio-8080-exec-8] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 19:50:59.567  INFO 17552 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 19:50:59.579  INFO 17552 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三  
- 插入链接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```

2020-02-16 19:56:05.378  INFO 17552 --- [http-nio-8080-exec-8] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/blog/30', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.check', args=[30, {}]}
2020-02-16 19:56:07.225  INFO 17552 --- [http-nio-8080-exec-8] com.peng.blog.aspect.LogAspect           : Return result:blog
2020-02-16 19:56:07.886  INFO 17552 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/content/30', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.content', args=[30]}
2020-02-16 19:56:07.899  INFO 17552 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : Return result:# 一、Markdown 是什么？
Markdown 是一种**轻量级的**「**标记语言**」，创始人为约翰·格鲁伯，用简洁的语法代替排版，目前被越来越多的知识工作者、写作爱好者、程序员或研究员广泛使用。其常用的标记符号不超过十个，相对于更为复杂的 HTML 标记语言来说，Markdown 十分的轻量，学习成本也不需要太多，且一旦熟悉这种语法规则，会有沉浸式编辑的效果。

# 二、Markdown 有什么特点？

 - 一键创建：支持 Markdown 独立的一键新建入口，为深度 Markdown 用户提供更好的效率体验；
 - 支持丰富的主流 Markdown 语法：支持文字相关样式、序号列表、任务列表、表格、TOC 目录、多种图表、数学公式、流程图、时序图、甘特图等；
 - 支持插入图片：可插入网络图片 或 直接拖动本地图片、复制剪贴板中的图片到 Markdown 笔记中；
 - 支持多种模式切换：编辑与预览模式、纯编辑模式以及纯预览模式；
 - 支持多种编辑主题：预置了白色、黑色、深空灰和印象绿主题，默认为印象绿，未来会有更多主题提供；
 - 跨平台同步：创建的 Markdown 笔记可在登录了印象笔记帐户的各端查看，未来更多端会支持创建和编辑 Markdown 笔记；
 - 演示模式：Markdown 笔记支持演示模式查看；
 - 支持其他印象笔记特点功能：笔记标注、导出 PDF、设置提醒、工作群聊共享-查看&编辑笔记等。

# 三、如何创建 Markdown 笔记？

 - 点击左上角「新建 Markdown 笔记」来创建新的 Markdown 笔记，另外，也支持配置隐藏「新建 Markdown 笔记」按钮，Windows 用户直接右单击「新建 Markdown 笔记」按钮，即可隐藏，Mac 用户可以右单击左侧边栏空白处，取消勾选「新建 Markdown 笔记」来完成隐藏此按钮
 - 点击菜单栏-文件-新建笔记-新建 Markdown 笔记（Mac 上为顶部菜单栏-文件-新建 Markdown笔记）
 - 使用快捷键 Ctrl+alt+D（Mac 上 CMD+D）来快速创建 Markdown 笔记

# 四、印象笔记 Markdown 笔记支持哪些语法？

- \# 设置分级标题（最多6级标题）
- \*\*加粗\*\*，效果：**加粗**
- \*斜体样式\*，效果：*斜体*
- \<u>下划线\</u>，效果：<u>下划线</u>
- \~\~删除线\~\~，效果：~~删除线~~
- \>引用文本，效果：

 > 这里是引用

- 添加代办事项，效果：
 三只青蛙：
 * [x] 第一
 * [ ] 第二
 * [ ] 第三  
- 插入链接：\[名称\]\(链接地址\)
 [百度官网](http://www.baidu.com)
- 插入图片：\!\[图片描述\]\(图片地址\)
![罗宾](https://img-blog.csdnimg.cn/20200215203947531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzA1NTU1,size_16,color_FFFFFF,t_70)
- 插入表格：  
 1.语法：  
| 标题一 | 标题二 |  
|-\-|-\-|  
| 值1 | 值2|  
 2.效果：  

| 标题一 | 标题二 |
|--|--|
| 值1 | 值2|

- 插入Java代码块：  
 1.语法:  
  \~\~\~java  
  插入代码  
  \~\~\~  
 2.效果  
 ```java
 System.out.println("Hello world!");
 ```

2020-02-16 22:21:59.634  INFO 19152 --- [main] com.peng.blog.AddComments                : Starting AddComments on LAPTOP-3JGI280N with PID 19152 (started by 23185 in D:\workspaces\ideaWebWorkSpace\blog)
2020-02-16 22:21:59.641 DEBUG 19152 --- [main] com.peng.blog.AddComments                : Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2020-02-16 22:21:59.642  INFO 19152 --- [main] com.peng.blog.AddComments                : The following profiles are active: dev
2020-02-16 22:22:00.320  INFO 19152 --- [main] o.s.w.c.s.GenericWebApplicationContext   : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@15d49048: startup date [Sun Feb 16 22:22:00 CST 2020]; root of context hierarchy
2020-02-16 22:22:07.969  INFO 19152 --- [main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-02-16 22:22:08.018  INFO 19152 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-02-16 22:22:08.162  INFO 19152 --- [main] org.hibernate.Version                    : HHH000412: Hibernate Core {5.0.12.Final}
2020-02-16 22:22:08.165  INFO 19152 --- [main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2020-02-16 22:22:08.167  INFO 19152 --- [main] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2020-02-16 22:22:08.299  INFO 19152 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2020-02-16 22:22:08.615  INFO 19152 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-16 22:22:09.777  INFO 19152 --- [main] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000228: Running hbm2ddl schema update
2020-02-16 22:22:10.899  INFO 19152 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 22:22:11.874  INFO 19152 --- [main] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2020-02-16 22:22:15.117  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@15d49048: startup date [Sun Feb 16 22:22:00 CST 2020]; root of context hierarchy
2020-02-16 22:22:15.380  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[ || /index.html],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.index(org.springframework.data.domain.Pageable,org.springframework.ui.Model)
2020-02-16 22:22:15.382  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.check(int,org.springframework.ui.Model) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:22:15.383  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.client.BlogController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:22:15.383  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/content/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.content(int) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:22:15.388  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.add(com.peng.blog.entity.Blog,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:22:15.388  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog || /manage/blog/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.list(org.springframework.data.domain.Pageable,org.springframework.ui.Model,javax.servlet.http.HttpSession)
2020-02-16 22:22:15.388  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/search]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.search(org.springframework.data.domain.Pageable,com.peng.blog.entity.Blog,org.springframework.ui.Model)
2020-02-16 22:22:15.389  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:22:15.389  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/del],methods=[GET]}" onto public com.peng.blog.utils.Message com.peng.blog.web.management.BlogManageController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:22:15.389  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/publish],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.publish(org.springframework.ui.Model,com.peng.blog.entity.Blog)
2020-02-16 22:22:15.390  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/login],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.LoginController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:22:15.391  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/logout],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.LoginController.logout(javax.servlet.http.HttpSession)
2020-02-16 22:22:15.395  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.add(com.peng.blog.entity.Tag,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:22:15.396  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag || /manage/tag/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.list(int,org.springframework.ui.Model)
2020-02-16 22:22:15.396  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:22:15.396  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:22:15.397  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:22:15.400  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.add(com.peng.blog.entity.Type,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:22:15.402  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/list || /manage/type],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.list(int,org.springframework.ui.Model)
2020-02-16 22:22:15.402  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:22:15.404  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:22:15.405  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:22:15.406  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t1]}" onto public java.lang.String com.peng.blog.web.TestController.t1(java.lang.String) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:22:15.407  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t3]}" onto public java.lang.String com.peng.blog.web.TestController.t3(int)
2020-02-16 22:22:15.424  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t2]}" onto public java.lang.String com.peng.blog.web.TestController.t2(java.lang.String,int,boolean) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:22:15.427  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-02-16 22:22:15.428  INFO 19152 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-02-16 22:22:15.495  INFO 19152 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:22:15.495  INFO 19152 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/index.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:22:15.495  INFO 19152 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/welcome] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:22:15.495  INFO 19152 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/type/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:22:15.495  INFO 19152 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/tag/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:22:15.538  INFO 19152 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:22:15.538  INFO 19152 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:22:15.636  INFO 19152 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in globalExceptionHandler
2020-02-16 22:22:15.800  INFO 19152 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:22:17.147  INFO 19152 --- [main] oConfiguration$WelcomePageHandlerMapping : Adding welcome page: ServletContext resource [/index.html]
2020-02-16 22:22:18.339  INFO 19152 --- [main] com.peng.blog.AddComments                : Started AddComments in 20.098 seconds (JVM running for 22.632)
2020-02-16 22:22:18.457  INFO 19152 --- [main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@709ba3fb testClass = AddComments, testInstance = com.peng.blog.AddComments@5c60f096, testMethod = t1@AddComments, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d36e4cd testClass = AddComments, locations = '{}', classes = '{class com.peng.blog.BlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@4fe3c938, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@71423665, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@56235b8e, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7fac631b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@30eb55c9]; rollback [true]
2020-02-16 22:22:20.070  INFO 19152 --- [main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@709ba3fb testClass = AddComments, testInstance = com.peng.blog.AddComments@5c60f096, testMethod = t1@AddComments, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d36e4cd testClass = AddComments, locations = '{}', classes = '{class com.peng.blog.BlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@4fe3c938, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@71423665, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@56235b8e, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7fac631b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2020-02-16 22:22:20.078  INFO 19152 --- [Thread-4] o.s.w.c.s.GenericWebApplicationContext   : Closing org.springframework.web.context.support.GenericWebApplicationContext@15d49048: startup date [Sun Feb 16 22:22:00 CST 2020]; root of context hierarchy
2020-02-16 22:22:20.085  INFO 19152 --- [Thread-4] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 22:22:56.584  INFO 4832 --- [main] com.peng.blog.AddComments                : Starting AddComments on LAPTOP-3JGI280N with PID 4832 (started by 23185 in D:\workspaces\ideaWebWorkSpace\blog)
2020-02-16 22:22:56.586 DEBUG 4832 --- [main] com.peng.blog.AddComments                : Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2020-02-16 22:22:56.586  INFO 4832 --- [main] com.peng.blog.AddComments                : The following profiles are active: dev
2020-02-16 22:22:57.540  INFO 4832 --- [main] o.s.w.c.s.GenericWebApplicationContext   : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@15d49048: startup date [Sun Feb 16 22:22:57 CST 2020]; root of context hierarchy
2020-02-16 22:23:03.683  INFO 4832 --- [main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-02-16 22:23:03.712  INFO 4832 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-02-16 22:23:03.799  INFO 4832 --- [main] org.hibernate.Version                    : HHH000412: Hibernate Core {5.0.12.Final}
2020-02-16 22:23:03.800  INFO 4832 --- [main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2020-02-16 22:23:03.802  INFO 4832 --- [main] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2020-02-16 22:23:03.850  INFO 4832 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2020-02-16 22:23:04.116  INFO 4832 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-16 22:23:05.148  INFO 4832 --- [main] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000228: Running hbm2ddl schema update
2020-02-16 22:23:05.812  INFO 4832 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 22:23:06.547  INFO 4832 --- [main] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2020-02-16 22:23:09.299  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@15d49048: startup date [Sun Feb 16 22:22:57 CST 2020]; root of context hierarchy
2020-02-16 22:23:09.473  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[ || /index.html],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.index(org.springframework.data.domain.Pageable,org.springframework.ui.Model)
2020-02-16 22:23:09.475  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.check(int,org.springframework.ui.Model) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:23:09.475  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.client.BlogController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:23:09.476  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/content/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.content(int) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:23:09.479  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.add(com.peng.blog.entity.Blog,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:23:09.480  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog || /manage/blog/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.list(org.springframework.data.domain.Pageable,org.springframework.ui.Model,javax.servlet.http.HttpSession)
2020-02-16 22:23:09.480  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/search]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.search(org.springframework.data.domain.Pageable,com.peng.blog.entity.Blog,org.springframework.ui.Model)
2020-02-16 22:23:09.480  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/publish],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.publish(org.springframework.ui.Model,com.peng.blog.entity.Blog)
2020-02-16 22:23:09.480  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/del],methods=[GET]}" onto public com.peng.blog.utils.Message com.peng.blog.web.management.BlogManageController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:23:09.480  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:23:09.483  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/logout],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.LoginController.logout(javax.servlet.http.HttpSession)
2020-02-16 22:23:09.485  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/login],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.LoginController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:23:09.487  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.add(com.peng.blog.entity.Tag,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:23:09.488  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag || /manage/tag/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.list(int,org.springframework.ui.Model)
2020-02-16 22:23:09.488  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:23:09.488  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:23:09.489  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:23:09.491  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.add(com.peng.blog.entity.Type,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:23:09.491  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/list || /manage/type],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.list(int,org.springframework.ui.Model)
2020-02-16 22:23:09.492  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:23:09.492  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:23:09.492  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:23:09.494  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t1]}" onto public java.lang.String com.peng.blog.web.TestController.t1(java.lang.String) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:23:09.495  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t2]}" onto public java.lang.String com.peng.blog.web.TestController.t2(java.lang.String,int,boolean) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:23:09.495  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t3]}" onto public java.lang.String com.peng.blog.web.TestController.t3(int)
2020-02-16 22:23:09.498  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-02-16 22:23:09.499  INFO 4832 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-02-16 22:23:09.601  INFO 4832 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:23:09.604  INFO 4832 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/index.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:23:09.614  INFO 4832 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/welcome] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:23:09.615  INFO 4832 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/type/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:23:09.615  INFO 4832 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/tag/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:23:09.696  INFO 4832 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:23:09.696  INFO 4832 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:23:09.741  INFO 4832 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in globalExceptionHandler
2020-02-16 22:23:09.788  INFO 4832 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:23:10.524  INFO 4832 --- [main] oConfiguration$WelcomePageHandlerMapping : Adding welcome page: ServletContext resource [/index.html]
2020-02-16 22:23:11.141  INFO 4832 --- [main] com.peng.blog.AddComments                : Started AddComments in 16.044 seconds (JVM running for 18.125)
2020-02-16 22:23:11.249  INFO 4832 --- [main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@709ba3fb testClass = AddComments, testInstance = com.peng.blog.AddComments@1760e688, testMethod = t1@AddComments, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d36e4cd testClass = AddComments, locations = '{}', classes = '{class com.peng.blog.BlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@4fe3c938, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@71423665, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@56235b8e, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7fac631b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2524d07a]; rollback [false]
2020-02-16 22:23:11.916  INFO 4832 --- [main] o.s.t.c.transaction.TransactionContext   : Committed transaction for test context [DefaultTestContext@709ba3fb testClass = AddComments, testInstance = com.peng.blog.AddComments@1760e688, testMethod = t1@AddComments, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@3d36e4cd testClass = AddComments, locations = '{}', classes = '{class com.peng.blog.BlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@4fe3c938, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@71423665, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@56235b8e, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7fac631b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2020-02-16 22:23:11.945  INFO 4832 --- [Thread-4] o.s.w.c.s.GenericWebApplicationContext   : Closing org.springframework.web.context.support.GenericWebApplicationContext@15d49048: startup date [Sun Feb 16 22:22:57 CST 2020]; root of context hierarchy
2020-02-16 22:23:11.952  INFO 4832 --- [Thread-4] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 22:26:56.175  INFO 9280 --- [main] com.peng.blog.AddComments                : Starting AddComments on LAPTOP-3JGI280N with PID 9280 (started by 23185 in D:\workspaces\ideaWebWorkSpace\blog)
2020-02-16 22:26:56.178 DEBUG 9280 --- [main] com.peng.blog.AddComments                : Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2020-02-16 22:26:56.179  INFO 9280 --- [main] com.peng.blog.AddComments                : The following profiles are active: dev
2020-02-16 22:26:57.177  INFO 9280 --- [main] o.s.w.c.s.GenericWebApplicationContext   : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@147e2ae7: startup date [Sun Feb 16 22:26:57 CST 2020]; root of context hierarchy
2020-02-16 22:27:02.805  INFO 9280 --- [main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-02-16 22:27:02.839  INFO 9280 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-02-16 22:27:02.970  INFO 9280 --- [main] org.hibernate.Version                    : HHH000412: Hibernate Core {5.0.12.Final}
2020-02-16 22:27:02.971  INFO 9280 --- [main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2020-02-16 22:27:02.973  INFO 9280 --- [main] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2020-02-16 22:27:03.033  INFO 9280 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2020-02-16 22:27:03.257  INFO 9280 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-16 22:27:05.159  INFO 9280 --- [main] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000228: Running hbm2ddl schema update
2020-02-16 22:27:06.910  INFO 9280 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 22:27:07.909  INFO 9280 --- [main] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2020-02-16 22:27:10.382  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@147e2ae7: startup date [Sun Feb 16 22:26:57 CST 2020]; root of context hierarchy
2020-02-16 22:27:10.536  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[ || /index.html],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.index(org.springframework.data.domain.Pageable,org.springframework.ui.Model)
2020-02-16 22:27:10.537  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.check(int,org.springframework.ui.Model) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:27:10.538  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.client.BlogController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:27:10.538  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/content/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.content(int) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:27:10.541  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.add(com.peng.blog.entity.Blog,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:27:10.546  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog || /manage/blog/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.list(org.springframework.data.domain.Pageable,org.springframework.ui.Model,javax.servlet.http.HttpSession)
2020-02-16 22:27:10.546  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/search]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.search(org.springframework.data.domain.Pageable,com.peng.blog.entity.Blog,org.springframework.ui.Model)
2020-02-16 22:27:10.546  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/publish],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.publish(org.springframework.ui.Model,com.peng.blog.entity.Blog)
2020-02-16 22:27:10.547  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/del],methods=[GET]}" onto public com.peng.blog.utils.Message com.peng.blog.web.management.BlogManageController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:27:10.547  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:27:10.549  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/login],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.LoginController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:27:10.549  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/logout],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.LoginController.logout(javax.servlet.http.HttpSession)
2020-02-16 22:27:10.552  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.add(com.peng.blog.entity.Tag,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:27:10.552  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag || /manage/tag/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.list(int,org.springframework.ui.Model)
2020-02-16 22:27:10.553  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:27:10.553  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:27:10.553  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:27:10.555  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.add(com.peng.blog.entity.Type,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:27:10.556  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/list || /manage/type],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.list(int,org.springframework.ui.Model)
2020-02-16 22:27:10.556  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:27:10.561  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:27:10.562  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:27:10.564  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t1]}" onto public java.lang.String com.peng.blog.web.TestController.t1(java.lang.String) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:27:10.564  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t2]}" onto public java.lang.String com.peng.blog.web.TestController.t2(java.lang.String,int,boolean) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:27:10.564  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t3]}" onto public java.lang.String com.peng.blog.web.TestController.t3(int)
2020-02-16 22:27:10.566  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-02-16 22:27:10.567  INFO 9280 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-02-16 22:27:10.731  INFO 9280 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:27:10.732  INFO 9280 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/index.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:27:10.733  INFO 9280 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/welcome] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:27:10.733  INFO 9280 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/type/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:27:10.733  INFO 9280 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/tag/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:27:10.786  INFO 9280 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:27:10.787  INFO 9280 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:27:10.854  INFO 9280 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in globalExceptionHandler
2020-02-16 22:27:10.932  INFO 9280 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:27:11.610  INFO 9280 --- [main] oConfiguration$WelcomePageHandlerMapping : Adding welcome page: ServletContext resource [/index.html]
2020-02-16 22:27:12.145  INFO 9280 --- [main] com.peng.blog.AddComments                : Started AddComments in 17.738 seconds (JVM running for 20.123)
2020-02-16 22:27:12.240  INFO 9280 --- [main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@ba8d91c testClass = AddComments, testInstance = com.peng.blog.AddComments@5cf3a7f9, testMethod = t1@AddComments, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7364985f testClass = AddComments, locations = '{}', classes = '{class com.peng.blog.BlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@5ce81285, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4fe3c938, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@71423665, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@61f8bee4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@40b01718]; rollback [false]
2020-02-16 22:27:12.804  INFO 9280 --- [main] o.s.t.c.transaction.TransactionContext   : Committed transaction for test context [DefaultTestContext@ba8d91c testClass = AddComments, testInstance = com.peng.blog.AddComments@5cf3a7f9, testMethod = t1@AddComments, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7364985f testClass = AddComments, locations = '{}', classes = '{class com.peng.blog.BlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@5ce81285, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4fe3c938, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@71423665, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@61f8bee4], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2020-02-16 22:27:12.815  INFO 9280 --- [Thread-4] o.s.w.c.s.GenericWebApplicationContext   : Closing org.springframework.web.context.support.GenericWebApplicationContext@147e2ae7: startup date [Sun Feb 16 22:26:57 CST 2020]; root of context hierarchy
2020-02-16 22:27:12.822  INFO 9280 --- [Thread-4] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 22:34:52.359  INFO 12960 --- [main] com.peng.blog.AddComments                : Starting AddComments on LAPTOP-3JGI280N with PID 12960 (started by 23185 in D:\workspaces\ideaWebWorkSpace\blog)
2020-02-16 22:34:52.360 DEBUG 12960 --- [main] com.peng.blog.AddComments                : Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2020-02-16 22:34:52.380  INFO 12960 --- [main] com.peng.blog.AddComments                : The following profiles are active: dev
2020-02-16 22:34:53.138  INFO 12960 --- [main] o.s.w.c.s.GenericWebApplicationContext   : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7098b907: startup date [Sun Feb 16 22:34:53 CST 2020]; root of context hierarchy
2020-02-16 22:34:58.329  INFO 12960 --- [main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-02-16 22:34:58.354  INFO 12960 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-02-16 22:34:58.438  INFO 12960 --- [main] org.hibernate.Version                    : HHH000412: Hibernate Core {5.0.12.Final}
2020-02-16 22:34:58.440  INFO 12960 --- [main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2020-02-16 22:34:58.442  INFO 12960 --- [main] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2020-02-16 22:34:58.488  INFO 12960 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2020-02-16 22:34:58.726  INFO 12960 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-16 22:34:59.738  INFO 12960 --- [main] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000228: Running hbm2ddl schema update
2020-02-16 22:35:00.582  INFO 12960 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 22:35:01.469  INFO 12960 --- [main] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2020-02-16 22:35:05.694  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@7098b907: startup date [Sun Feb 16 22:34:53 CST 2020]; root of context hierarchy
2020-02-16 22:35:05.938  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[ || /index.html],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.index(org.springframework.data.domain.Pageable,org.springframework.ui.Model)
2020-02-16 22:35:05.939  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.check(int,org.springframework.ui.Model) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:35:05.940  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.client.BlogController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:35:05.943  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/content/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.content(int) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:35:05.947  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.add(com.peng.blog.entity.Blog,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:35:05.947  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog || /manage/blog/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.list(org.springframework.data.domain.Pageable,org.springframework.ui.Model,javax.servlet.http.HttpSession)
2020-02-16 22:35:05.948  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/search]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.search(org.springframework.data.domain.Pageable,com.peng.blog.entity.Blog,org.springframework.ui.Model)
2020-02-16 22:35:05.948  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/publish],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.publish(org.springframework.ui.Model,com.peng.blog.entity.Blog)
2020-02-16 22:35:05.949  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:35:05.949  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/del],methods=[GET]}" onto public com.peng.blog.utils.Message com.peng.blog.web.management.BlogManageController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:35:05.951  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/login],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.LoginController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:35:05.951  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/logout],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.LoginController.logout(javax.servlet.http.HttpSession)
2020-02-16 22:35:05.957  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.add(com.peng.blog.entity.Tag,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:35:05.957  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag || /manage/tag/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.list(int,org.springframework.ui.Model)
2020-02-16 22:35:05.957  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:35:05.958  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:35:05.959  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:35:05.964  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.add(com.peng.blog.entity.Type,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:35:05.966  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/list || /manage/type],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.list(int,org.springframework.ui.Model)
2020-02-16 22:35:05.966  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:35:05.967  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:35:05.972  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:35:05.975  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t1]}" onto public java.lang.String com.peng.blog.web.TestController.t1(java.lang.String) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:35:05.975  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t2]}" onto public java.lang.String com.peng.blog.web.TestController.t2(java.lang.String,int,boolean) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:35:05.976  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t3]}" onto public java.lang.String com.peng.blog.web.TestController.t3(int)
2020-02-16 22:35:05.977  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-02-16 22:35:05.978  INFO 12960 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-02-16 22:35:06.029  INFO 12960 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:35:06.029  INFO 12960 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/index.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:35:06.030  INFO 12960 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/welcome] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:35:06.030  INFO 12960 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/type/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:35:06.030  INFO 12960 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/tag/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:35:06.062  INFO 12960 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:35:06.063  INFO 12960 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:35:06.111  INFO 12960 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in globalExceptionHandler
2020-02-16 22:35:06.281  INFO 12960 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:35:07.263  INFO 12960 --- [main] oConfiguration$WelcomePageHandlerMapping : Adding welcome page: ServletContext resource [/index.html]
2020-02-16 22:35:07.943  INFO 12960 --- [main] com.peng.blog.AddComments                : Started AddComments in 16.825 seconds (JVM running for 18.444)
2020-02-16 22:35:08.034  INFO 12960 --- [main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@3d36e4cd testClass = AddComments, testInstance = com.peng.blog.AddComments@5059d398, testMethod = t2@AddComments, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a472554 testClass = AddComments, locations = '{}', classes = '{class com.peng.blog.BlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@4fe3c938, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@71423665, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@56235b8e, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7fac631b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@626df173]; rollback [false]
2020-02-16 22:35:08.843  INFO 12960 --- [main] o.s.t.c.transaction.TransactionContext   : Committed transaction for test context [DefaultTestContext@3d36e4cd testClass = AddComments, testInstance = com.peng.blog.AddComments@5059d398, testMethod = t2@AddComments, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6a472554 testClass = AddComments, locations = '{}', classes = '{class com.peng.blog.BlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@4fe3c938, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@71423665, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@56235b8e, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7fac631b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2020-02-16 22:35:08.910  INFO 12960 --- [Thread-4] o.s.w.c.s.GenericWebApplicationContext   : Closing org.springframework.web.context.support.GenericWebApplicationContext@7098b907: startup date [Sun Feb 16 22:34:53 CST 2020]; root of context hierarchy
2020-02-16 22:35:08.922  INFO 12960 --- [Thread-4] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 22:38:12.904  INFO 1604 --- [main] com.peng.blog.AddComments                : Starting AddComments on LAPTOP-3JGI280N with PID 1604 (started by 23185 in D:\workspaces\ideaWebWorkSpace\blog)
2020-02-16 22:38:12.908 DEBUG 1604 --- [main] com.peng.blog.AddComments                : Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2020-02-16 22:38:12.908  INFO 1604 --- [main] com.peng.blog.AddComments                : The following profiles are active: dev
2020-02-16 22:38:13.842  INFO 1604 --- [main] o.s.w.c.s.GenericWebApplicationContext   : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@503f91c3: startup date [Sun Feb 16 22:38:13 CST 2020]; root of context hierarchy
2020-02-16 22:38:19.820  INFO 1604 --- [main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-02-16 22:38:19.849  INFO 1604 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-02-16 22:38:19.951  INFO 1604 --- [main] org.hibernate.Version                    : HHH000412: Hibernate Core {5.0.12.Final}
2020-02-16 22:38:19.952  INFO 1604 --- [main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2020-02-16 22:38:19.954  INFO 1604 --- [main] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2020-02-16 22:38:20.004  INFO 1604 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2020-02-16 22:38:20.224  INFO 1604 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-16 22:38:21.316  INFO 1604 --- [main] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000228: Running hbm2ddl schema update
2020-02-16 22:38:22.024  INFO 1604 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 22:38:22.721  INFO 1604 --- [main] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2020-02-16 22:38:25.361  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@503f91c3: startup date [Sun Feb 16 22:38:13 CST 2020]; root of context hierarchy
2020-02-16 22:38:25.618  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[ || /index.html],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.index(org.springframework.data.domain.Pageable,org.springframework.ui.Model)
2020-02-16 22:38:25.619  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.check(int,org.springframework.ui.Model) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:38:25.620  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.client.BlogController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:38:25.628  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/content/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.content(int) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:38:25.634  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.add(com.peng.blog.entity.Blog,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:38:25.637  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog || /manage/blog/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.list(org.springframework.data.domain.Pageable,org.springframework.ui.Model,javax.servlet.http.HttpSession)
2020-02-16 22:38:25.638  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/search]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.search(org.springframework.data.domain.Pageable,com.peng.blog.entity.Blog,org.springframework.ui.Model)
2020-02-16 22:38:25.638  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/publish],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.publish(org.springframework.ui.Model,com.peng.blog.entity.Blog)
2020-02-16 22:38:25.638  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:38:25.639  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/del],methods=[GET]}" onto public com.peng.blog.utils.Message com.peng.blog.web.management.BlogManageController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:38:25.642  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/login],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.LoginController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:38:25.642  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/logout],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.LoginController.logout(javax.servlet.http.HttpSession)
2020-02-16 22:38:25.646  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.add(com.peng.blog.entity.Tag,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:38:25.647  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag || /manage/tag/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.list(int,org.springframework.ui.Model)
2020-02-16 22:38:25.647  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:38:25.659  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:38:25.660  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:38:25.669  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.add(com.peng.blog.entity.Type,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:38:25.670  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/list || /manage/type],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.list(int,org.springframework.ui.Model)
2020-02-16 22:38:25.684  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:38:25.685  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:38:25.687  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:38:25.690  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t3]}" onto public java.lang.String com.peng.blog.web.TestController.t3(int)
2020-02-16 22:38:25.691  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t1]}" onto public java.lang.String com.peng.blog.web.TestController.t1(java.lang.String) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:38:25.691  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t2]}" onto public java.lang.String com.peng.blog.web.TestController.t2(java.lang.String,int,boolean) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:38:25.694  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-02-16 22:38:25.697  INFO 1604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-02-16 22:38:25.784  INFO 1604 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:38:25.784  INFO 1604 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/index.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:38:25.786  INFO 1604 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/welcome] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:38:25.786  INFO 1604 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/type/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:38:25.787  INFO 1604 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/tag/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:38:25.829  INFO 1604 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:38:25.830  INFO 1604 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:38:25.997  INFO 1604 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in globalExceptionHandler
2020-02-16 22:38:26.076  INFO 1604 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:38:27.126  INFO 1604 --- [main] oConfiguration$WelcomePageHandlerMapping : Adding welcome page: ServletContext resource [/index.html]
2020-02-16 22:38:27.709  INFO 1604 --- [main] com.peng.blog.AddComments                : Started AddComments in 16.001 seconds (JVM running for 18.703)
2020-02-16 22:38:27.812  INFO 1604 --- [main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@6a472554 testClass = AddComments, testInstance = com.peng.blog.AddComments@1d008e61, testMethod = t3@AddComments, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7ff2a664 testClass = AddComments, locations = '{}', classes = '{class com.peng.blog.BlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@4fe3c938, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@71423665, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@56235b8e, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7fac631b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@669580e2]; rollback [false]
2020-02-16 22:38:28.212  INFO 1604 --- [main] o.s.t.c.transaction.TransactionContext   : Committed transaction for test context [DefaultTestContext@6a472554 testClass = AddComments, testInstance = com.peng.blog.AddComments@1d008e61, testMethod = t3@AddComments, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7ff2a664 testClass = AddComments, locations = '{}', classes = '{class com.peng.blog.BlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@4fe3c938, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@71423665, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@56235b8e, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7fac631b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2020-02-16 22:38:28.219  INFO 1604 --- [Thread-4] o.s.w.c.s.GenericWebApplicationContext   : Closing org.springframework.web.context.support.GenericWebApplicationContext@503f91c3: startup date [Sun Feb 16 22:38:13 CST 2020]; root of context hierarchy
2020-02-16 22:38:28.233  INFO 1604 --- [Thread-4] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 22:42:59.028  INFO 18044 --- [main] com.peng.blog.AddComments                : Starting AddComments on LAPTOP-3JGI280N with PID 18044 (started by 23185 in D:\workspaces\ideaWebWorkSpace\blog)
2020-02-16 22:42:59.030 DEBUG 18044 --- [main] com.peng.blog.AddComments                : Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2020-02-16 22:42:59.031  INFO 18044 --- [main] com.peng.blog.AddComments                : The following profiles are active: dev
2020-02-16 22:42:59.674  INFO 18044 --- [main] o.s.w.c.s.GenericWebApplicationContext   : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@13526e59: startup date [Sun Feb 16 22:42:59 CST 2020]; root of context hierarchy
2020-02-16 22:43:05.153  INFO 18044 --- [main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-02-16 22:43:05.178  INFO 18044 --- [main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-02-16 22:43:05.291  INFO 18044 --- [main] org.hibernate.Version                    : HHH000412: Hibernate Core {5.0.12.Final}
2020-02-16 22:43:05.297  INFO 18044 --- [main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2020-02-16 22:43:05.298  INFO 18044 --- [main] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2020-02-16 22:43:05.345  INFO 18044 --- [main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2020-02-16 22:43:05.522  INFO 18044 --- [main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-16 22:43:06.504  INFO 18044 --- [main] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000228: Running hbm2ddl schema update
2020-02-16 22:43:07.199  INFO 18044 --- [main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 22:43:07.937  INFO 18044 --- [main] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2020-02-16 22:43:09.904  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@13526e59: startup date [Sun Feb 16 22:42:59 CST 2020]; root of context hierarchy
2020-02-16 22:43:10.060  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[ || /index.html],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.index(org.springframework.data.domain.Pageable,org.springframework.ui.Model)
2020-02-16 22:43:10.062  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.check(int,org.springframework.ui.Model) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:43:10.063  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.client.BlogController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:43:10.063  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comments/{id}],methods=[GET]}" onto public java.util.List<com.peng.blog.entity.Comment> com.peng.blog.web.client.BlogController.comments(int)
2020-02-16 22:43:10.064  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/content/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.content(int) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:43:10.067  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.add(com.peng.blog.entity.Blog,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:43:10.067  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog || /manage/blog/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.list(org.springframework.data.domain.Pageable,org.springframework.ui.Model,javax.servlet.http.HttpSession)
2020-02-16 22:43:10.067  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/search]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.search(org.springframework.data.domain.Pageable,com.peng.blog.entity.Blog,org.springframework.ui.Model)
2020-02-16 22:43:10.067  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/publish],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.publish(org.springframework.ui.Model,com.peng.blog.entity.Blog)
2020-02-16 22:43:10.067  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:43:10.068  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/del],methods=[GET]}" onto public com.peng.blog.utils.Message com.peng.blog.web.management.BlogManageController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:43:10.069  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/logout],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.LoginController.logout(javax.servlet.http.HttpSession)
2020-02-16 22:43:10.069  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/login],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.LoginController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:43:10.075  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.add(com.peng.blog.entity.Tag,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:43:10.076  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag || /manage/tag/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.list(int,org.springframework.ui.Model)
2020-02-16 22:43:10.076  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:43:10.076  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:43:10.077  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:43:10.079  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.add(com.peng.blog.entity.Type,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:43:10.080  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/list || /manage/type],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.list(int,org.springframework.ui.Model)
2020-02-16 22:43:10.080  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:43:10.081  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:43:10.083  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:43:10.084  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t1]}" onto public java.lang.String com.peng.blog.web.TestController.t1(java.lang.String) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:43:10.085  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t2]}" onto public java.lang.String com.peng.blog.web.TestController.t2(java.lang.String,int,boolean) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:43:10.085  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t3]}" onto public java.lang.String com.peng.blog.web.TestController.t3(int)
2020-02-16 22:43:10.088  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-02-16 22:43:10.090  INFO 18044 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-02-16 22:43:10.132  INFO 18044 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:43:10.133  INFO 18044 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/index.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:43:10.133  INFO 18044 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/welcome] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:43:10.133  INFO 18044 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/type/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:43:10.133  INFO 18044 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/tag/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:43:10.158  INFO 18044 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:43:10.159  INFO 18044 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:43:10.199  INFO 18044 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in globalExceptionHandler
2020-02-16 22:43:10.246  INFO 18044 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:43:10.879  INFO 18044 --- [main] oConfiguration$WelcomePageHandlerMapping : Adding welcome page: ServletContext resource [/index.html]
2020-02-16 22:43:11.482  INFO 18044 --- [main] com.peng.blog.AddComments                : Started AddComments in 13.624 seconds (JVM running for 15.276)
2020-02-16 22:43:11.595  INFO 18044 --- [main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@6a472554 testClass = AddComments, testInstance = com.peng.blog.AddComments@43df1377, testMethod = t3@AddComments, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7ff2a664 testClass = AddComments, locations = '{}', classes = '{class com.peng.blog.BlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@4fe3c938, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@71423665, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@56235b8e, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7fac631b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@5f8df69]; rollback [false]
2020-02-16 22:43:12.231  INFO 18044 --- [main] o.s.t.c.transaction.TransactionContext   : Committed transaction for test context [DefaultTestContext@6a472554 testClass = AddComments, testInstance = com.peng.blog.AddComments@43df1377, testMethod = t3@AddComments, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@7ff2a664 testClass = AddComments, locations = '{}', classes = '{class com.peng.blog.BlogApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.SpringBootTestContextCustomizer@4fe3c938, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@71423665, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@56235b8e, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7fac631b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2020-02-16 22:43:12.318  INFO 18044 --- [Thread-4] o.s.w.c.s.GenericWebApplicationContext   : Closing org.springframework.web.context.support.GenericWebApplicationContext@13526e59: startup date [Sun Feb 16 22:42:59 CST 2020]; root of context hierarchy
2020-02-16 22:43:12.329  INFO 18044 --- [Thread-4] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 22:44:46.155  INFO 15016 --- [restartedMain] com.peng.blog.BlogApplication            : Starting BlogApplication on LAPTOP-3JGI280N with PID 15016 (D:\workspaces\ideaWebWorkSpace\blog\target\classes started by 23185 in D:\workspaces\ideaWebWorkSpace\blog)
2020-02-16 22:44:46.157 DEBUG 15016 --- [restartedMain] com.peng.blog.BlogApplication            : Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2020-02-16 22:44:46.158  INFO 15016 --- [restartedMain] com.peng.blog.BlogApplication            : The following profiles are active: dev
2020-02-16 22:44:46.553  INFO 15016 --- [restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@111fb991: startup date [Sun Feb 16 22:44:46 CST 2020]; root of context hierarchy
2020-02-16 22:44:49.419  INFO 15016 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2020-02-16 22:44:49.435  INFO 15016 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-16 22:44:49.436  INFO 15016 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.23
2020-02-16 22:44:49.613  INFO 15016 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-16 22:44:49.613  INFO 15016 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3060 ms
2020-02-16 22:44:49.940  INFO 15016 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2020-02-16 22:44:49.946  INFO 15016 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2020-02-16 22:44:49.947  INFO 15016 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-02-16 22:44:49.948  INFO 15016 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-02-16 22:44:49.949  INFO 15016 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2020-02-16 22:44:51.261  INFO 15016 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-02-16 22:44:51.273  INFO 15016 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-02-16 22:44:51.341  INFO 15016 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.0.12.Final}
2020-02-16 22:44:51.343  INFO 15016 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2020-02-16 22:44:51.344  INFO 15016 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2020-02-16 22:44:51.381  INFO 15016 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2020-02-16 22:44:51.561  INFO 15016 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-16 22:44:52.025  INFO 15016 --- [restartedMain] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000228: Running hbm2ddl schema update
2020-02-16 22:44:53.310  INFO 15016 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 22:44:54.040  INFO 15016 --- [restartedMain] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2020-02-16 22:44:55.113  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@111fb991: startup date [Sun Feb 16 22:44:46 CST 2020]; root of context hierarchy
2020-02-16 22:44:55.203  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[ || /index.html],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.index(org.springframework.data.domain.Pageable,org.springframework.ui.Model)
2020-02-16 22:44:55.204  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.check(int,org.springframework.ui.Model) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:44:55.205  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.client.BlogController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:44:55.206  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comments/{id}],methods=[GET]}" onto public java.util.List<com.peng.blog.entity.Comment> com.peng.blog.web.client.BlogController.comments(int)
2020-02-16 22:44:55.206  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/content/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.content(int) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:44:55.208  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.add(com.peng.blog.entity.Blog,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:44:55.209  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog || /manage/blog/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.list(org.springframework.data.domain.Pageable,org.springframework.ui.Model,javax.servlet.http.HttpSession)
2020-02-16 22:44:55.210  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/search]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.search(org.springframework.data.domain.Pageable,com.peng.blog.entity.Blog,org.springframework.ui.Model)
2020-02-16 22:44:55.210  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/publish],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.publish(org.springframework.ui.Model,com.peng.blog.entity.Blog)
2020-02-16 22:44:55.210  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/del],methods=[GET]}" onto public com.peng.blog.utils.Message com.peng.blog.web.management.BlogManageController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:44:55.211  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:44:55.213  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/logout],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.LoginController.logout(javax.servlet.http.HttpSession)
2020-02-16 22:44:55.214  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/login],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.LoginController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:44:55.217  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.add(com.peng.blog.entity.Tag,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:44:55.218  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag || /manage/tag/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.list(int,org.springframework.ui.Model)
2020-02-16 22:44:55.219  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:44:55.219  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:44:55.220  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:44:55.222  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.add(com.peng.blog.entity.Type,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:44:55.222  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/list || /manage/type],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.list(int,org.springframework.ui.Model)
2020-02-16 22:44:55.222  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:44:55.222  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:44:55.223  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:44:55.224  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t2]}" onto public java.lang.String com.peng.blog.web.TestController.t2(java.lang.String,int,boolean) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:44:55.225  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t1]}" onto public java.lang.String com.peng.blog.web.TestController.t1(java.lang.String) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:44:55.225  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t3]}" onto public java.lang.String com.peng.blog.web.TestController.t3(int)
2020-02-16 22:44:55.228  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-02-16 22:44:55.229  INFO 15016 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-02-16 22:44:55.266  INFO 15016 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:44:55.266  INFO 15016 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/index.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:44:55.266  INFO 15016 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/welcome] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:44:55.266  INFO 15016 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/type/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:44:55.266  INFO 15016 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/tag/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:44:55.283  INFO 15016 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:44:55.283  INFO 15016 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:44:55.310  INFO 15016 --- [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in globalExceptionHandler
2020-02-16 22:44:55.356  INFO 15016 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:44:55.689  INFO 15016 --- [restartedMain] oConfiguration$WelcomePageHandlerMapping : Adding welcome page: class path resource [static/index.html]
2020-02-16 22:44:56.121  INFO 15016 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-16 22:44:56.170  INFO 15016 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2020-02-16 22:44:56.238  INFO 15016 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2020-02-16 22:44:56.243  INFO 15016 --- [restartedMain] com.peng.blog.BlogApplication            : Started BlogApplication in 11.478 seconds (JVM running for 14.333)
2020-02-16 22:45:36.940  INFO 15016 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-02-16 22:45:36.941  INFO 15016 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2020-02-16 22:45:37.004  INFO 15016 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 63 ms
2020-02-16 22:45:37.175  INFO 15016 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/comments/30', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.comments', args=[30]}
2020-02-16 22:45:37.279  INFO 15016 --- [http-nio-8080-exec-2] com.peng.blog.aspect.LogAspect           : Return result:[Comment{id='2', content='我是一级评论，代号c1', nickname='AAAA', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:23:11.0, childs=[Comment{id='6', content='我是二级评论，代号c1_1', nickname='海王', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:08.0, childs=[Comment{id='10', content='我是三级评论，代号c1_1_1', nickname='狗符咒', mail='456@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='11', content='我是三级评论，代号c1_2_1', nickname='兔符咒', mail='789@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}]}, Comment{id='7', content='我是二级评论，代号c1_2', nickname='毒液', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[]}]}, Comment{id='3', content='我是一级评论，代号c2', nickname='BBBB', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:27:12.0, childs=[]}, Comment{id='4', content='我是一级评论，代号c3', nickname='CCCC', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:27:13.0, childs=[Comment{id='8', content='我是二级评论，代号c3_1', nickname='蜘蛛侠', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[Comment{id='12', content='我是三级评论，代号c3_1_1', nickname='小玉', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='13', content='我是三级评论，代号c3_2_1', nickname='老爹', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}]}, Comment{id='9', content='我是二级评论，代号c3_2', nickname='钢铁侠', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[]}]}, Comment{id='5', content='我是一级评论，代号c4', nickname='DDDD', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:27:13.0, childs=[]}, Comment{id='6', content='我是二级评论，代号c1_1', nickname='海王', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:08.0, childs=[Comment{id='10', content='我是三级评论，代号c1_1_1', nickname='狗符咒', mail='456@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='11', content='我是三级评论，代号c1_2_1', nickname='兔符咒', mail='789@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}]}, Comment{id='7', content='我是二级评论，代号c1_2', nickname='毒液', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[]}, Comment{id='8', content='我是二级评论，代号c3_1', nickname='蜘蛛侠', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[Comment{id='12', content='我是三级评论，代号c3_1_1', nickname='小玉', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='13', content='我是三级评论，代号c3_2_1', nickname='老爹', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}]}, Comment{id='9', content='我是二级评论，代号c3_2', nickname='钢铁侠', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[]}, Comment{id='10', content='我是三级评论，代号c1_1_1', nickname='狗符咒', mail='456@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='11', content='我是三级评论，代号c1_2_1', nickname='兔符咒', mail='789@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='12', content='我是三级评论，代号c3_1_1', nickname='小玉', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='13', content='我是三级评论，代号c3_2_1', nickname='老爹', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}]
2020-02-16 22:45:37.645  INFO 15016 --- [http-nio-8080-exec-2] c.p.blog.handler.GlobalExceptionHandler  : 调用handleException方法
2020-02-16 22:45:37.647 ERROR 15016 --- [http-nio-8080-exec-2] c.p.blog.handler.GlobalExceptionHandler  : 抛出异常:org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"])
2020-02-16 22:45:37.682  WARN 15016 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved exception caused by Handler execution: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"])
2020-02-16 22:45:38.405 ERROR 15016 --- [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: getOutputStream() has already been called for this response] with root cause

java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-02-16 22:45:38.496 ERROR 15016 --- [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] threw exception

java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration$SpelView.render(ErrorMvcAutoConfiguration.java:227)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-02-16 22:45:38.498 ERROR 15016 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost]           : Exception Processing ErrorPage[errorCode=0, location=/error]

org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration$SpelView.render(ErrorMvcAutoConfiguration.java:227)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	... 38 common frames omitted

2020-02-16 22:45:49.999  INFO 15016 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/comments/30', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.comments', args=[30]}
2020-02-16 22:45:50.005  INFO 15016 --- [http-nio-8080-exec-3] com.peng.blog.aspect.LogAspect           : Return result:[Comment{id='2', content='我是一级评论，代号c1', nickname='AAAA', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:23:11.0, childs=[Comment{id='6', content='我是二级评论，代号c1_1', nickname='海王', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:08.0, childs=[Comment{id='10', content='我是三级评论，代号c1_1_1', nickname='狗符咒', mail='456@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='11', content='我是三级评论，代号c1_2_1', nickname='兔符咒', mail='789@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}]}, Comment{id='7', content='我是二级评论，代号c1_2', nickname='毒液', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[]}]}, Comment{id='3', content='我是一级评论，代号c2', nickname='BBBB', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:27:12.0, childs=[]}, Comment{id='4', content='我是一级评论，代号c3', nickname='CCCC', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:27:13.0, childs=[Comment{id='8', content='我是二级评论，代号c3_1', nickname='蜘蛛侠', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[Comment{id='12', content='我是三级评论，代号c3_1_1', nickname='小玉', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='13', content='我是三级评论，代号c3_2_1', nickname='老爹', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}]}, Comment{id='9', content='我是二级评论，代号c3_2', nickname='钢铁侠', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[]}]}, Comment{id='5', content='我是一级评论，代号c4', nickname='DDDD', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:27:13.0, childs=[]}, Comment{id='6', content='我是二级评论，代号c1_1', nickname='海王', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:08.0, childs=[Comment{id='10', content='我是三级评论，代号c1_1_1', nickname='狗符咒', mail='456@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='11', content='我是三级评论，代号c1_2_1', nickname='兔符咒', mail='789@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}]}, Comment{id='7', content='我是二级评论，代号c1_2', nickname='毒液', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[]}, Comment{id='8', content='我是二级评论，代号c3_1', nickname='蜘蛛侠', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[Comment{id='12', content='我是三级评论，代号c3_1_1', nickname='小玉', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='13', content='我是三级评论，代号c3_2_1', nickname='老爹', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}]}, Comment{id='9', content='我是二级评论，代号c3_2', nickname='钢铁侠', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[]}, Comment{id='10', content='我是三级评论，代号c1_1_1', nickname='狗符咒', mail='456@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='11', content='我是三级评论，代号c1_2_1', nickname='兔符咒', mail='789@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='12', content='我是三级评论，代号c3_1_1', nickname='小玉', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='13', content='我是三级评论，代号c3_2_1', nickname='老爹', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}]
2020-02-16 22:45:50.076  INFO 15016 --- [http-nio-8080-exec-3] c.p.blog.handler.GlobalExceptionHandler  : 调用handleException方法
2020-02-16 22:45:50.077 ERROR 15016 --- [http-nio-8080-exec-3] c.p.blog.handler.GlobalExceptionHandler  : 抛出异常:org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"])
2020-02-16 22:45:50.115  WARN 15016 --- [http-nio-8080-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved exception caused by Handler execution: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"])
2020-02-16 22:45:50.118 ERROR 15016 --- [http-nio-8080-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: getOutputStream() has already been called for this response] with root cause

java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-02-16 22:45:50.134 ERROR 15016 --- [http-nio-8080-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] threw exception

java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration$SpelView.render(ErrorMvcAutoConfiguration.java:227)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-02-16 22:45:50.135 ERROR 15016 --- [http-nio-8080-exec-3] o.a.c.c.C.[Tomcat].[localhost]           : Exception Processing ErrorPage[errorCode=0, location=/error]

org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration$SpelView.render(ErrorMvcAutoConfiguration.java:227)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	... 38 common frames omitted

2020-02-16 22:56:36.428  INFO 14000 --- [restartedMain] com.peng.blog.BlogApplication            : Starting BlogApplication on LAPTOP-3JGI280N with PID 14000 (D:\workspaces\ideaWebWorkSpace\blog\target\classes started by 23185 in D:\workspaces\ideaWebWorkSpace\blog)
2020-02-16 22:56:36.429 DEBUG 14000 --- [restartedMain] com.peng.blog.BlogApplication            : Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2020-02-16 22:56:36.429  INFO 14000 --- [restartedMain] com.peng.blog.BlogApplication            : The following profiles are active: dev
2020-02-16 22:56:36.840  INFO 14000 --- [restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40e2d687: startup date [Sun Feb 16 22:56:36 CST 2020]; root of context hierarchy
2020-02-16 22:56:39.684  INFO 14000 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2020-02-16 22:56:39.694  INFO 14000 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-16 22:56:39.695  INFO 14000 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.23
2020-02-16 22:56:39.847  INFO 14000 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-16 22:56:39.848  INFO 14000 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3009 ms
2020-02-16 22:56:40.210  INFO 14000 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2020-02-16 22:56:40.217  INFO 14000 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2020-02-16 22:56:40.219  INFO 14000 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-02-16 22:56:40.219  INFO 14000 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-02-16 22:56:40.219  INFO 14000 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2020-02-16 22:56:41.462  INFO 14000 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-02-16 22:56:41.475  INFO 14000 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-02-16 22:56:41.541  INFO 14000 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.0.12.Final}
2020-02-16 22:56:41.543  INFO 14000 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2020-02-16 22:56:41.544  INFO 14000 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2020-02-16 22:56:41.580  INFO 14000 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2020-02-16 22:56:41.814  INFO 14000 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-16 22:56:42.292  INFO 14000 --- [restartedMain] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000228: Running hbm2ddl schema update
2020-02-16 22:56:42.851  INFO 14000 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 22:56:43.147  INFO 14000 --- [restartedMain] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2020-02-16 22:56:43.894  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@40e2d687: startup date [Sun Feb 16 22:56:36 CST 2020]; root of context hierarchy
2020-02-16 22:56:43.969  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[ || /index.html],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.index(org.springframework.data.domain.Pageable,org.springframework.ui.Model)
2020-02-16 22:56:43.970  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.check(int,org.springframework.ui.Model) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:56:43.970  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.client.BlogController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:56:43.971  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comments/{id}],methods=[GET]}" onto public java.util.List<com.peng.blog.entity.Comment> com.peng.blog.web.client.BlogController.comments(int)
2020-02-16 22:56:43.971  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/content/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.content(int) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:56:43.973  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.add(com.peng.blog.entity.Blog,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:56:43.973  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog || /manage/blog/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.list(org.springframework.data.domain.Pageable,org.springframework.ui.Model,javax.servlet.http.HttpSession)
2020-02-16 22:56:43.973  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/search]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.search(org.springframework.data.domain.Pageable,com.peng.blog.entity.Blog,org.springframework.ui.Model)
2020-02-16 22:56:43.973  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/publish],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.publish(org.springframework.ui.Model,com.peng.blog.entity.Blog)
2020-02-16 22:56:43.974  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:56:43.974  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/del],methods=[GET]}" onto public com.peng.blog.utils.Message com.peng.blog.web.management.BlogManageController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:56:43.975  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/logout],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.LoginController.logout(javax.servlet.http.HttpSession)
2020-02-16 22:56:43.975  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/login],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.LoginController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:56:43.977  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.add(com.peng.blog.entity.Tag,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:56:43.978  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag || /manage/tag/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.list(int,org.springframework.ui.Model)
2020-02-16 22:56:43.980  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:56:43.980  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:56:43.980  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:56:43.983  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.add(com.peng.blog.entity.Type,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:56:43.983  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/list || /manage/type],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.list(int,org.springframework.ui.Model)
2020-02-16 22:56:43.984  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:56:43.984  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:56:43.984  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:56:43.985  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t2]}" onto public java.lang.String com.peng.blog.web.TestController.t2(java.lang.String,int,boolean) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:56:43.986  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t1]}" onto public java.lang.String com.peng.blog.web.TestController.t1(java.lang.String) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:56:43.986  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t3]}" onto public java.lang.String com.peng.blog.web.TestController.t3(int)
2020-02-16 22:56:43.988  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-02-16 22:56:43.988  INFO 14000 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-02-16 22:56:44.020  INFO 14000 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:56:44.020  INFO 14000 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/index.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:56:44.020  INFO 14000 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/welcome] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:56:44.020  INFO 14000 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/type/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:56:44.020  INFO 14000 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/tag/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:56:44.034  INFO 14000 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:56:44.034  INFO 14000 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:56:44.056  INFO 14000 --- [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in globalExceptionHandler
2020-02-16 22:56:44.077  INFO 14000 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:56:44.433  INFO 14000 --- [restartedMain] oConfiguration$WelcomePageHandlerMapping : Adding welcome page: class path resource [static/index.html]
2020-02-16 22:56:44.834  INFO 14000 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-16 22:56:44.881  INFO 14000 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2020-02-16 22:56:44.950  INFO 14000 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2020-02-16 22:56:44.955  INFO 14000 --- [restartedMain] com.peng.blog.BlogApplication            : Started BlogApplication in 9.266 seconds (JVM running for 11.176)
2020-02-16 22:57:01.837  INFO 14000 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-02-16 22:57:01.838  INFO 14000 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2020-02-16 22:57:01.922  INFO 14000 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 84 ms
2020-02-16 22:57:01.990  INFO 14000 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/comments/30', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.comments', args=[30]}
2020-02-16 22:57:02.143  INFO 14000 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : Return result:[Comment{id='2', content='我是一级评论，代号c1', nickname='AAAA', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:23:11.0, childs=[Comment{id='6', content='我是二级评论，代号c1_1', nickname='海王', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:08.0, childs=[Comment{id='10', content='我是三级评论，代号c1_1_1', nickname='狗符咒', mail='456@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='11', content='我是三级评论，代号c1_2_1', nickname='兔符咒', mail='789@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}]}, Comment{id='7', content='我是二级评论，代号c1_2', nickname='毒液', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[]}]}, Comment{id='3', content='我是一级评论，代号c2', nickname='BBBB', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:27:12.0, childs=[]}, Comment{id='4', content='我是一级评论，代号c3', nickname='CCCC', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:27:13.0, childs=[Comment{id='8', content='我是二级评论，代号c3_1', nickname='蜘蛛侠', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[Comment{id='12', content='我是三级评论，代号c3_1_1', nickname='小玉', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='13', content='我是三级评论，代号c3_2_1', nickname='老爹', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}]}, Comment{id='9', content='我是二级评论，代号c3_2', nickname='钢铁侠', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[]}]}, Comment{id='5', content='我是一级评论，代号c4', nickname='DDDD', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:27:13.0, childs=[]}, Comment{id='6', content='我是二级评论，代号c1_1', nickname='海王', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:08.0, childs=[Comment{id='10', content='我是三级评论，代号c1_1_1', nickname='狗符咒', mail='456@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='11', content='我是三级评论，代号c1_2_1', nickname='兔符咒', mail='789@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}]}, Comment{id='7', content='我是二级评论，代号c1_2', nickname='毒液', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[]}, Comment{id='8', content='我是二级评论，代号c3_1', nickname='蜘蛛侠', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[Comment{id='12', content='我是三级评论，代号c3_1_1', nickname='小玉', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='13', content='我是三级评论，代号c3_2_1', nickname='老爹', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}]}, Comment{id='9', content='我是二级评论，代号c3_2', nickname='钢铁侠', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[]}, Comment{id='10', content='我是三级评论，代号c1_1_1', nickname='狗符咒', mail='456@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='11', content='我是三级评论，代号c1_2_1', nickname='兔符咒', mail='789@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='12', content='我是三级评论，代号c3_1_1', nickname='小玉', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='13', content='我是三级评论，代号c3_2_1', nickname='老爹', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}]
2020-02-16 22:57:02.361  INFO 14000 --- [http-nio-8080-exec-1] c.p.blog.handler.GlobalExceptionHandler  : 调用handleException方法
2020-02-16 22:57:02.365 ERROR 14000 --- [http-nio-8080-exec-1] c.p.blog.handler.GlobalExceptionHandler  : 抛出异常:org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"])
2020-02-16 22:57:02.427  WARN 14000 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved exception caused by Handler execution: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"]->org.hibernate.collection.internal.PersistentBag[0]->com.peng.blog.entity.Comment["parentComment"]->com.peng.blog.entity.Comment["childs"])
2020-02-16 22:57:03.098 ERROR 14000 --- [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: getOutputStream() has already been called for this response] with root cause

java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-02-16 22:57:03.176 ERROR 14000 --- [http-nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] threw exception

java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration$SpelView.render(ErrorMvcAutoConfiguration.java:227)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-02-16 22:57:03.177 ERROR 14000 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost]           : Exception Processing ErrorPage[errorCode=0, location=/error]

org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration$SpelView.render(ErrorMvcAutoConfiguration.java:227)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	... 38 common frames omitted

2020-02-16 22:58:26.260  INFO 7356 --- [restartedMain] com.peng.blog.BlogApplication            : Starting BlogApplication on LAPTOP-3JGI280N with PID 7356 (D:\workspaces\ideaWebWorkSpace\blog\target\classes started by 23185 in D:\workspaces\ideaWebWorkSpace\blog)
2020-02-16 22:58:26.263 DEBUG 7356 --- [restartedMain] com.peng.blog.BlogApplication            : Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2020-02-16 22:58:26.263  INFO 7356 --- [restartedMain] com.peng.blog.BlogApplication            : The following profiles are active: dev
2020-02-16 22:58:26.626  INFO 7356 --- [restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c9a6f46: startup date [Sun Feb 16 22:58:26 CST 2020]; root of context hierarchy
2020-02-16 22:58:29.117  INFO 7356 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2020-02-16 22:58:29.127  INFO 7356 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-16 22:58:29.128  INFO 7356 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.23
2020-02-16 22:58:29.297  INFO 7356 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-16 22:58:29.298  INFO 7356 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2672 ms
2020-02-16 22:58:29.592  INFO 7356 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2020-02-16 22:58:29.595  INFO 7356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2020-02-16 22:58:29.596  INFO 7356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-02-16 22:58:29.597  INFO 7356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-02-16 22:58:29.597  INFO 7356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2020-02-16 22:58:30.912  INFO 7356 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-02-16 22:58:30.932  INFO 7356 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-02-16 22:58:31.004  INFO 7356 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.0.12.Final}
2020-02-16 22:58:31.005  INFO 7356 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2020-02-16 22:58:31.006  INFO 7356 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2020-02-16 22:58:31.046  INFO 7356 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2020-02-16 22:58:31.249  INFO 7356 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-16 22:58:31.796  INFO 7356 --- [restartedMain] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000228: Running hbm2ddl schema update
2020-02-16 22:58:32.408  INFO 7356 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 22:58:32.803  INFO 7356 --- [restartedMain] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2020-02-16 22:58:33.704  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@c9a6f46: startup date [Sun Feb 16 22:58:26 CST 2020]; root of context hierarchy
2020-02-16 22:58:33.816  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[ || /index.html],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.index(org.springframework.data.domain.Pageable,org.springframework.ui.Model)
2020-02-16 22:58:33.817  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.check(int,org.springframework.ui.Model) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:58:33.818  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.client.BlogController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:58:33.818  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comments/{id}],methods=[GET]}" onto public java.util.List<com.peng.blog.entity.Comment> com.peng.blog.web.client.BlogController.comments(int)
2020-02-16 22:58:33.818  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/content/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.content(int) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:58:33.822  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.add(com.peng.blog.entity.Blog,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:58:33.822  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog || /manage/blog/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.list(org.springframework.data.domain.Pageable,org.springframework.ui.Model,javax.servlet.http.HttpSession)
2020-02-16 22:58:33.823  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/search]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.search(org.springframework.data.domain.Pageable,com.peng.blog.entity.Blog,org.springframework.ui.Model)
2020-02-16 22:58:33.824  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/publish],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.publish(org.springframework.ui.Model,com.peng.blog.entity.Blog)
2020-02-16 22:58:33.824  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:58:33.824  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/del],methods=[GET]}" onto public com.peng.blog.utils.Message com.peng.blog.web.management.BlogManageController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:58:33.825  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/login],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.LoginController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:58:33.825  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/logout],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.LoginController.logout(javax.servlet.http.HttpSession)
2020-02-16 22:58:33.827  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.add(com.peng.blog.entity.Tag,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:58:33.827  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag || /manage/tag/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.list(int,org.springframework.ui.Model)
2020-02-16 22:58:33.827  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:58:33.828  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:58:33.828  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:58:33.829  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.add(com.peng.blog.entity.Type,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:58:33.830  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/list || /manage/type],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.list(int,org.springframework.ui.Model)
2020-02-16 22:58:33.830  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 22:58:33.830  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:58:33.831  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 22:58:33.832  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t2]}" onto public java.lang.String com.peng.blog.web.TestController.t2(java.lang.String,int,boolean) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:58:33.832  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t1]}" onto public java.lang.String com.peng.blog.web.TestController.t1(java.lang.String) throws com.peng.blog.exception.NotFoundException
2020-02-16 22:58:33.832  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t3]}" onto public java.lang.String com.peng.blog.web.TestController.t3(int)
2020-02-16 22:58:33.835  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-02-16 22:58:33.835  INFO 7356 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-02-16 22:58:33.878  INFO 7356 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:58:33.878  INFO 7356 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/index.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:58:33.878  INFO 7356 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/welcome] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:58:33.878  INFO 7356 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/type/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:58:33.878  INFO 7356 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/tag/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 22:58:33.896  INFO 7356 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:58:33.896  INFO 7356 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:58:33.927  INFO 7356 --- [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in globalExceptionHandler
2020-02-16 22:58:33.961  INFO 7356 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 22:58:34.334  INFO 7356 --- [restartedMain] oConfiguration$WelcomePageHandlerMapping : Adding welcome page: class path resource [static/index.html]
2020-02-16 22:58:34.815  INFO 7356 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-16 22:58:34.891  INFO 7356 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2020-02-16 22:58:34.967  INFO 7356 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2020-02-16 22:58:34.974  INFO 7356 --- [restartedMain] com.peng.blog.BlogApplication            : Started BlogApplication in 9.504 seconds (JVM running for 12.503)
2020-02-16 22:58:48.756  INFO 7356 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-02-16 22:58:48.756  INFO 7356 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2020-02-16 22:58:48.864  INFO 7356 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 108 ms
2020-02-16 22:58:48.930  INFO 7356 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/comments/30', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.comments', args=[30]}
2020-02-16 22:58:49.090  INFO 7356 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : Return result:[Comment{id='2', content='我是一级评论，代号c1', nickname='AAAA', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:23:11.0, childs=[Comment{id='6', content='我是二级评论，代号c1_1', nickname='海王', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:08.0, childs=[Comment{id='10', content='我是三级评论，代号c1_1_1', nickname='狗符咒', mail='456@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='11', content='我是三级评论，代号c1_2_1', nickname='兔符咒', mail='789@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}]}, Comment{id='7', content='我是二级评论，代号c1_2', nickname='毒液', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[]}]}, Comment{id='3', content='我是一级评论，代号c2', nickname='BBBB', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:27:12.0, childs=[]}, Comment{id='4', content='我是一级评论，代号c3', nickname='CCCC', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:27:13.0, childs=[Comment{id='8', content='我是二级评论，代号c3_1', nickname='蜘蛛侠', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[Comment{id='12', content='我是三级评论，代号c3_1_1', nickname='小玉', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='13', content='我是三级评论，代号c3_2_1', nickname='老爹', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}]}, Comment{id='9', content='我是二级评论，代号c3_2', nickname='钢铁侠', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[]}]}, Comment{id='5', content='我是一级评论，代号c4', nickname='DDDD', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:27:13.0, childs=[]}, Comment{id='6', content='我是二级评论，代号c1_1', nickname='海王', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:08.0, childs=[Comment{id='10', content='我是三级评论，代号c1_1_1', nickname='狗符咒', mail='456@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='11', content='我是三级评论，代号c1_2_1', nickname='兔符咒', mail='789@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}]}, Comment{id='7', content='我是二级评论，代号c1_2', nickname='毒液', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[]}, Comment{id='8', content='我是二级评论，代号c3_1', nickname='蜘蛛侠', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[Comment{id='12', content='我是三级评论，代号c3_1_1', nickname='小玉', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='13', content='我是三级评论，代号c3_2_1', nickname='老爹', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}]}, Comment{id='9', content='我是二级评论，代号c3_2', nickname='钢铁侠', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[]}, Comment{id='10', content='我是三级评论，代号c1_1_1', nickname='狗符咒', mail='456@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='11', content='我是三级评论，代号c1_2_1', nickname='兔符咒', mail='789@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='12', content='我是三级评论，代号c3_1_1', nickname='小玉', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='13', content='我是三级评论，代号c3_2_1', nickname='老爹', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}]
2020-02-16 23:06:45.723  INFO 13640 --- [restartedMain] com.peng.blog.BlogApplication            : Starting BlogApplication on LAPTOP-3JGI280N with PID 13640 (D:\workspaces\ideaWebWorkSpace\blog\target\classes started by 23185 in D:\workspaces\ideaWebWorkSpace\blog)
2020-02-16 23:06:45.724 DEBUG 13640 --- [restartedMain] com.peng.blog.BlogApplication            : Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2020-02-16 23:06:45.725  INFO 13640 --- [restartedMain] com.peng.blog.BlogApplication            : The following profiles are active: dev
2020-02-16 23:06:46.157  INFO 13640 --- [restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@271a40c: startup date [Sun Feb 16 23:06:46 CST 2020]; root of context hierarchy
2020-02-16 23:06:49.015  INFO 13640 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2020-02-16 23:06:49.030  INFO 13640 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-16 23:06:49.032  INFO 13640 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.23
2020-02-16 23:06:49.205  INFO 13640 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-16 23:06:49.206  INFO 13640 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3049 ms
2020-02-16 23:06:49.540  INFO 13640 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2020-02-16 23:06:49.545  INFO 13640 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2020-02-16 23:06:49.546  INFO 13640 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-02-16 23:06:49.546  INFO 13640 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-02-16 23:06:49.546  INFO 13640 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2020-02-16 23:06:50.809  INFO 13640 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-02-16 23:06:50.820  INFO 13640 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-02-16 23:06:50.903  INFO 13640 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.0.12.Final}
2020-02-16 23:06:50.905  INFO 13640 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2020-02-16 23:06:50.907  INFO 13640 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2020-02-16 23:06:50.957  INFO 13640 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2020-02-16 23:06:51.180  INFO 13640 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-02-16 23:06:51.631  INFO 13640 --- [restartedMain] org.hibernate.tool.hbm2ddl.SchemaUpdate  : HHH000228: Running hbm2ddl schema update
2020-02-16 23:06:52.094  INFO 13640 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-16 23:06:52.397  INFO 13640 --- [restartedMain] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
2020-02-16 23:06:53.157  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@271a40c: startup date [Sun Feb 16 23:06:46 CST 2020]; root of context hierarchy
2020-02-16 23:06:53.244  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[ || /index.html],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.index(org.springframework.data.domain.Pageable,org.springframework.ui.Model)
2020-02-16 23:06:53.245  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.check(int,org.springframework.ui.Model) throws com.peng.blog.exception.NotFoundException
2020-02-16 23:06:53.246  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.client.BlogController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 23:06:53.246  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comments/{id}],methods=[GET]}" onto public java.util.List<com.peng.blog.entity.Comment> com.peng.blog.web.client.BlogController.comments(int) throws com.peng.blog.exception.NotFoundException
2020-02-16 23:06:53.246  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/content/{id}],methods=[GET]}" onto public java.lang.String com.peng.blog.web.client.BlogController.content(int) throws com.peng.blog.exception.NotFoundException
2020-02-16 23:06:53.248  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.add(com.peng.blog.entity.Blog,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 23:06:53.248  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog || /manage/blog/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.list(org.springframework.data.domain.Pageable,org.springframework.ui.Model,javax.servlet.http.HttpSession)
2020-02-16 23:06:53.248  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/search]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.search(org.springframework.data.domain.Pageable,com.peng.blog.entity.Blog,org.springframework.ui.Model)
2020-02-16 23:06:53.249  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/publish],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.publish(org.springframework.ui.Model,com.peng.blog.entity.Blog)
2020-02-16 23:06:53.249  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.BlogManageController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 23:06:53.249  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/blog/del],methods=[GET]}" onto public com.peng.blog.utils.Message com.peng.blog.web.management.BlogManageController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 23:06:53.250  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/logout],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.LoginController.logout(javax.servlet.http.HttpSession)
2020-02-16 23:06:53.251  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/login],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.LoginController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 23:06:53.252  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.add(com.peng.blog.entity.Tag,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 23:06:53.252  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag || /manage/tag/list],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.list(int,org.springframework.ui.Model)
2020-02-16 23:06:53.253  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TagController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 23:06:53.253  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 23:06:53.254  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/tag/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TagController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 23:06:53.256  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/add],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.add(com.peng.blog.entity.Type,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 23:06:53.256  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/list || /manage/type],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.list(int,org.springframework.ui.Model)
2020-02-16 23:06:53.256  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/search],methods=[POST]}" onto public java.lang.String com.peng.blog.web.management.TypeController.search(org.springframework.data.domain.Pageable,java.lang.String,org.springframework.ui.Model)
2020-02-16 23:06:53.256  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/edit],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.edit(int,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws com.peng.blog.exception.NotFoundException
2020-02-16 23:06:53.257  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/manage/type/del],methods=[GET]}" onto public java.lang.String com.peng.blog.web.management.TypeController.del(int,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-02-16 23:06:53.257  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t2]}" onto public java.lang.String com.peng.blog.web.TestController.t2(java.lang.String,int,boolean) throws com.peng.blog.exception.NotFoundException
2020-02-16 23:06:53.258  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t1]}" onto public java.lang.String com.peng.blog.web.TestController.t1(java.lang.String) throws com.peng.blog.exception.NotFoundException
2020-02-16 23:06:53.258  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test/t3]}" onto public java.lang.String com.peng.blog.web.TestController.t3(int)
2020-02-16 23:06:53.259  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-02-16 23:06:53.260  INFO 13640 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-02-16 23:06:53.289  INFO 13640 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 23:06:53.289  INFO 13640 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/index.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 23:06:53.289  INFO 13640 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/welcome] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 23:06:53.289  INFO 13640 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/type/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 23:06:53.289  INFO 13640 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/manage/tag/publish] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-02-16 23:06:53.305  INFO 13640 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 23:06:53.306  INFO 13640 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 23:06:53.329  INFO 13640 --- [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in globalExceptionHandler
2020-02-16 23:06:53.361  INFO 13640 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-02-16 23:06:53.747  INFO 13640 --- [restartedMain] oConfiguration$WelcomePageHandlerMapping : Adding welcome page: class path resource [static/index.html]
2020-02-16 23:06:54.170  INFO 13640 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-16 23:06:54.233  INFO 13640 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2020-02-16 23:06:54.379  INFO 13640 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2020-02-16 23:06:54.385  INFO 13640 --- [restartedMain] com.peng.blog.BlogApplication            : Started BlogApplication in 9.505 seconds (JVM running for 11.52)
2020-02-16 23:07:01.415  INFO 13640 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-02-16 23:07:01.415  INFO 13640 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2020-02-16 23:07:01.478  INFO 13640 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 63 ms
2020-02-16 23:07:01.527  INFO 13640 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : RequestLog:RequestLog{url='http://localhost:8080/comments/30', ip='127.0.0.1', classMethod='com.peng.blog.web.client.BlogController.comments', args=[30]}
2020-02-16 23:07:01.825  INFO 13640 --- [http-nio-8080-exec-1] com.peng.blog.aspect.LogAspect           : Return result:[Comment{id='2', content='我是一级评论，代号c1', nickname='AAAA', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:23:11.0, childs=[Comment{id='6', content='我是二级评论，代号c1_1', nickname='海王', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:08.0, childs=[Comment{id='10', content='我是三级评论，代号c1_1_1', nickname='狗符咒', mail='456@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='11', content='我是三级评论，代号c1_2_1', nickname='兔符咒', mail='789@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}]}, Comment{id='7', content='我是二级评论，代号c1_2', nickname='毒液', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[]}]}, Comment{id='3', content='我是一级评论，代号c2', nickname='BBBB', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:27:12.0, childs=[]}, Comment{id='4', content='我是一级评论，代号c3', nickname='CCCC', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:27:13.0, childs=[Comment{id='8', content='我是二级评论，代号c3_1', nickname='蜘蛛侠', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[Comment{id='12', content='我是三级评论，代号c3_1_1', nickname='小玉', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}, Comment{id='13', content='我是三级评论，代号c3_2_1', nickname='老爹', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:38:28.0, childs=[]}]}, Comment{id='9', content='我是二级评论，代号c3_2', nickname='钢铁侠', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:35:09.0, childs=[]}]}, Comment{id='5', content='我是一级评论，代号c4', nickname='DDDD', mail='231@qq.com', avatar='https://i.picsum.photos/id/1005/2515/1830.jpg', publish_time=2020-02-16 22:27:13.0, childs=[]}]
